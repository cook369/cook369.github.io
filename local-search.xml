<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>ansible-delegate_to</title>
    <link href="/2025/08/05/ansible-delegate-to/"/>
    <url>/2025/08/05/ansible-delegate-to/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>harbor-proxy</title>
    <link href="/2025/07/30/harbor-proxy/"/>
    <url>/2025/07/30/harbor-proxy/</url>
    
    <content type="html"><![CDATA[<h2 id="docekr-buildx-push-出现错误"><a href="#docekr-buildx-push-出现错误" class="headerlink" title="docekr buildx push 出现错误"></a>docekr buildx push 出现错误</h2><ol><li>ERROR: failed to solve: failed to push registry.xxxx.com&#x2F;xxx: unauthorized: unauthorized to access repository: xxxx, action: push: unauthorized to access repository: xxx, action: push</li><li>ERROR: failed to solve: failed to fetch oauth token: unexpected status from GET request to <a href="https://registry.xxxxx.com/service/token">https://registry.xxxxx.com/service/token</a>: 400 Bad Request</li></ol><h2 id="原因分析"><a href="#原因分析" class="headerlink" title="原因分析"></a>原因分析</h2><ol><li><code>$HOME/.docker/config.json</code>,这个文件提供镜像仓库认证信息，可以使用<code>docker login xxxx</code>生成，可以解决unauthorized问题.</li><li>harbor 获取token失败，问题原因是请求harbor后返回的认证头是http，但请求的地址是https的，协议不一致，获取token时候丢掉了部分参数，导致参数错误</li></ol><h2 id="Harbar-配置为http，nginx提供ssl代理"><a href="#Harbar-配置为http，nginx提供ssl代理" class="headerlink" title="Harbar 配置为http，nginx提供ssl代理"></a>Harbar 配置为http，nginx提供ssl代理</h2><h3 id="请求路径"><a href="#请求路径" class="headerlink" title="请求路径"></a>请求路径</h3><p><code>https -&gt; nginx -&gt; http -&gt; Harbor Nginx -&gt; Harbor 核心</code></p><h3 id="外层nginx配置"><a href="#外层nginx配置" class="headerlink" title="外层nginx配置"></a>外层nginx配置</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs shell">server &#123;<br>    listen 80;<br>    server_name xxx;<br>    return 301 https://$host$request_uri;<br>&#125;<br><br><br>server &#123;<br>  listen 443 ssl;<br><br>  ssl_certificate /etc/nginx/certs/xxx.crt;<br>  ssl_certificate_key /etc/nginx/certs/xxx.key;<br><br>  client_max_body_size 0;<br>  server_name xxx;<br>  server_tokens off;<br>  add_header X-Frame-Options SAMEORIGIN;<br><br><br>  location  / &#123;<br>        proxy_pass http://127.0.0.1:8099/;<br>        proxy_redirect off;<br>        proxy_set_header Host $host;<br>        proxy_set_header X-Real-IP $remote_addr;<br>        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;<br>        proxy_set_header X-Forwarded-Proto $scheme;<br><br>        proxy_http_version 1.1;<br><br>        proxy_buffering off;<br>        proxy_request_buffering off;<br>  &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="harbor-yml-配置"><a href="#harbor-yml-配置" class="headerlink" title="harbor.yml 配置"></a>harbor.yml 配置</h3><ol><li>更新主机名</li><li>关闭https</li><li>配置数据卷</li><li>配置external_url</li><li><code>./install.sh --with-trivy</code></li><li>执行 <code>docker-compose up -d</code></li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">hostname:</span> <span class="hljs-string">registry.mydomaine.com</span><br><br><span class="hljs-comment"># http related config</span><br><span class="hljs-attr">http:</span><br>  <span class="hljs-comment"># port for http, default is 80. If https enabled, this port will redirect to https port</span><br>  <span class="hljs-attr">port:</span> <span class="hljs-number">8099</span><br><br><span class="hljs-comment"># https related config</span><br><span class="hljs-comment"># https:</span><br>  <span class="hljs-comment"># port: 443</span><br>  <span class="hljs-comment"># certificate: /your/certificate/path</span><br>  <span class="hljs-comment"># private_key: /your/private/key/path</span><br>  <span class="hljs-comment"># strong_ssl_ciphers: false</span><br><br><span class="hljs-attr">external_url:</span> <span class="hljs-string">https://registry.mydomaine.com</span><br><span class="hljs-attr">data_volume:</span> <span class="hljs-string">/data1/harbor</span><br></code></pre></td></tr></table></figure><h2 id="external-url作用"><a href="#external-url作用" class="headerlink" title="external_url作用"></a>external_url作用</h2><p>转换到认证头上</p><h3 id="测试认证头"><a href="#测试认证头" class="headerlink" title="测试认证头"></a>测试认证头</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell">curl -X GET -I &quot;https://registry.xxxx.com/v2/&quot;<br>HTTP/1.1 401 Unauthorized<br>Server: nginx<br>Date: Wed, 30 Jul 2025 10:49:22 GMT<br>Content-Type: application/json; charset=utf-8<br>Content-Length: 76<br>Connection: keep-alive<br>Docker-Distribution-Api-Version: registry/2.0<br>Set-Cookie: sid=3ed976b856e69dbd238f61663679801d; Path=/; HttpOnly<br>Www-Authenticate: Bearer realm=&quot;https://registry.xxxx.com/service/token&quot;,service=&quot;harbor-registry&quot;<br>X-Request-Id: 4dc241ea-d97f-4832-87a6-e19e0c241d68<br></code></pre></td></tr></table></figure><h3 id="测试buildx推送问题"><a href="#测试buildx推送问题" class="headerlink" title="测试buildx推送问题"></a>测试buildx推送问题</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker buildx build --builder test-builder --push --tag registry.xxxx.com/build/buildx-test:v1 --platform linux/amd64 - &lt;&lt;&#x27;EOF&#x27;<br>FROM scratch<br>LABEL test=&quot;buildx-auth&quot;<br>EOF<br></code></pre></td></tr></table></figure><h3 id="可选配置"><a href="#可选配置" class="headerlink" title="可选配置"></a>可选配置</h3><p>修改<code>/common/config/nginx/nginx.conf</code>, 注释<code>proxy_set_header X-Forwarded-Proto $scheme;</code></p><h2 id="信任证书"><a href="#信任证书" class="headerlink" title="信任证书"></a>信任证书</h2><p>Ubuntu:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">cp yourdomain.com.crt /usr/local/share/ca-certificates/yourdomain.com.crt <br>update-ca-certificates<br></code></pre></td></tr></table></figure><p>Red Hat (CentOS etc):<br>Red Hat (CentOS 等):</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">cp yourdomain.com.crt /etc/pki/ca-trust/source/anchors/yourdomain.com.crt<br>update-ca-trust<br></code></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>[1] <a href="https://medium.com/@jodywan/cloud-native-devops-08-harbor-2-0-with-traefik-2-0-reverse-proxy-5acbba95534a">Harbor 2.0 与 Traefik 2.0 反向代理</a><br>[2] <a href="https://github.com/goharbor/harbor/issues/12959">In Harbor 2.0.2 cannot configure redirection from http to https in config.yml file </a><br>[3] <a href="https://goharbor.io/docs/2.13.0/install-config/troubleshoot-installation/">解决 Harbor 安装问题</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>docker</tag>
      
      <tag>harbor</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>virsh常用命令</title>
    <link href="/2025/06/19/virsh-usage/"/>
    <url>/2025/06/19/virsh-usage/</url>
    
    <content type="html"><![CDATA[<h1 id="virsh介绍"><a href="#virsh介绍" class="headerlink" title="virsh介绍"></a>virsh介绍</h1><p>virsh是libvirt的命令行工具，用于管理kvm虚拟机。<br>可以用来完成创建虚拟机，查看虚拟机，动态热插拔硬盘，给虚拟机做快照，迁移、启动、停止、挂起、暂停、删除虚拟机等操作</p><h1 id="kvm虚拟机管理的不同方式"><a href="#kvm虚拟机管理的不同方式" class="headerlink" title="kvm虚拟机管理的不同方式"></a>kvm虚拟机管理的不同方式</h1><p>virt-manager图形界面，virsh是终端命令行，两者都是通过libvirt连接至libvirtd管理虚拟机；<br>qemu直接调用kvm内核中模块的API管理虚拟机；</p><h1 id="virsh常用命令"><a href="#virsh常用命令" class="headerlink" title="virsh常用命令"></a>virsh常用命令</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 查看所有虚拟机</span><br>virsh list --all<br><span class="hljs-comment"># 启动虚拟机</span><br>virsh start vm-name<br><span class="hljs-comment"># 停止虚拟机</span><br>virsh shutdown vm-name<br><span class="hljs-comment"># 删除虚拟机</span><br>virsh destroy vm-name<br><span class="hljs-comment"># 创建虚拟机</span><br>virsh define vm-name.xml<br><span class="hljs-comment"># 删除虚拟机定义</span><br>virsh undefine vm-name<br><span class="hljs-comment"># 获取虚拟机状态</span><br>virsh domstate vm-name<br><span class="hljs-comment"># 获取虚拟机信息</span><br>virsh dominfo vm-name<br><span class="hljs-comment"># 获取虚拟机IP地址</span><br>virsh domifaddr vm-name<br><span class="hljs-comment"># 查看KVM虚拟机当前配置</span><br>virsh dumpxml vm-name &gt; vm-name.xml<br><span class="hljs-comment"># 克隆虚拟机</span><br>virsh <span class="hljs-built_in">clone</span> vm-name vm-name-clone<br><span class="hljs-comment"># 动态修改cpu，memory, --live在线生效，--config下次重启生效</span><br>virsh setvcpus &lt;vm-name&gt; 4 --config --live<br>virsh setmaxmem &lt;vm-name&gt; 10G --config --live<br></code></pre></td></tr></table></figure><h1 id="虚拟机增加磁盘"><a href="#虚拟机增加磁盘" class="headerlink" title="虚拟机增加磁盘"></a>虚拟机增加磁盘</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">virsh shutdown &lt;vm-name&gt;<br><span class="hljs-comment"># 查看虚拟机磁盘路径：</span><br>virsh domblklist &lt;vm-name&gt;<br><span class="hljs-comment"># 扩展磁盘大小</span><br>qemu-img resize /var/lib/libvirt/images/centos7.qcow2 +10G<br>virsh start &lt;vm-name&gt;<br></code></pre></td></tr></table></figure><h1 id="挂载磁盘"><a href="#挂载磁盘" class="headerlink" title="挂载磁盘"></a>挂载磁盘</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 创建qcow2格式磁盘</span><br>qemu-img create -f qcow2 /opt/test.qcow2 10G<br><span class="hljs-comment"># 查看磁盘信息</span><br>qemu-img info /opt/test.qcow2 <br><br><span class="hljs-comment"># 将磁盘挂载到虚拟机上</span><br>virsh attach-disk vm-node1 /opt/test.qcow2 vdb --persistent<br><span class="hljs-comment"># 卸载磁盘</span><br>virsh detach-device vm-node1 --persistent<br></code></pre></td></tr></table></figure><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><p>默认kvm上的虚拟机的配置文件都保存在&#x2F;etc&#x2F;libvirt&#x2F;qemu&#x2F;目录下，以虚拟机名称命名的配置文件；修改了虚拟机名称、磁盘镜像文件存放位置，mac地址后可以创建一个新的虚拟机</p>]]></content>
    
    
    
    <tags>
      
      <tag>virsh</tag>
      
      <tag>kvm</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Docker Buildx 配置</title>
    <link href="/2025/05/24/buildx-in-config/"/>
    <url>/2025/05/24/buildx-in-config/</url>
    
    <content type="html"><![CDATA[<h1 id="gitlab-ci-中使用-buildx"><a href="#gitlab-ci-中使用-buildx" class="headerlink" title="gitlab ci 中使用 buildx"></a>gitlab ci 中使用 buildx</h1><ol><li>生成 buildx 的私有仓库配置文件</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs shell">cat &lt;&lt; EOF &gt; buildkitd.toml<br><br>debug = true<br>insecure-entitlements = [ &quot;network.host&quot;, &quot;security.insecure&quot; ]<br>[dns]<br>  nameservers=[&quot;xxxxxx&quot;,&quot;114.114.114.114&quot;]<br>[worker.oci]<br>  enabled = true<br>[registry.&quot;registry.xxx.com&quot;]<br>  ca=[&quot;./registry.xxx.com.cert&quot;]<br>[registry.&quot;registry.xxx.com:5000&quot;]<br>  http = true<br>  insecure = false<br>EOF<br></code></pre></td></tr></table></figure><ol start="2"><li>创建 buildx 容器</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker buildx create --name builder --use --config buildkitd.toml --driver-opt image=docker-0.unsee.tech/moby/buildkit:v0.22.0<br>docker buildx inspect --bootstrap<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">配置远程build环境</span><br>docker buildx rm test-builder<br>docker buildx create --name test-builder --driver docker-container --platform linux/amd64 ssh://root@xxxxx --config ./buildkitd.toml<br>docker buildx create --name test-builder --driver docker-container --platform linux/arm64 --append ssh://root@xxxx --config ./buildkitd.toml<br>docker buildx inspect test-builder --bootstrap<br></code></pre></td></tr></table></figure><ol start="3"><li>将证书文件加入系统信任(解决”x509: certificate signed by unknown authority”)</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">Debian / Ubuntu</span><br>sudo cp ca.crt /usr/local/share/ca-certificates/<br>sudo update-ca-certificates<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">Red Hat / CentOS / Fedora / Rocky / AlmaLinux</span><br>sudo cp ca.crt /etc/pki/ca-trust/source/anchors/<br>sudo update-ca-trust extract<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">Arch Linux</span><br>sudo cp ca.crt /etc/ca-certificates/trust-source/anchors/<br>sudo trust extract-compat<br><br></code></pre></td></tr></table></figure><ol start="4"><li>检测 ca 证书是否生效</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">Debian / Ubuntu</span><br>openssl verify -CAfile /etc/ssl/certs/ca-certificates.crt ca.crt<br><span class="hljs-meta prompt_"># </span><span class="language-bash">Red Hat / CentOS</span><br>openssl verify -CAfile /etc/pki/tls/certs/ca-bundle.crt my-root-ca.crt<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">测试https是否可用</span><br>curl https://xxxxx.com<br></code></pre></td></tr></table></figure><ol start="5"><li>dockerfile 增加 cache</li></ol><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-comment"># apt cache</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> --mount=<span class="hljs-built_in">type</span>=cache,target=/var/cache/apt,sharing=locked,<span class="hljs-built_in">id</span>=test-apt-cache \</span><br><span class="language-bash">    --mount=<span class="hljs-built_in">type</span>=cache,target=/var/lib/apt,sharing=locked,<span class="hljs-built_in">id</span>=test-apt-lib \</span><br><span class="language-bash">    sed -i s@/deb.debian.org/@/mirrors.aliyun.com/@g /etc/apt/sources.list &amp;&amp; \</span><br><span class="language-bash">    sed -i s@/security.debian.org/@/mirrors.aliyun.com/@g /etc/apt/sources.list &amp;&amp; \</span><br><span class="language-bash">    apt-get update &amp;&amp; \</span><br><span class="language-bash">    apt-get -y --no-install-recommends install \</span><br><span class="language-bash">        wget ca-certificates curl procps</span><br><br><span class="hljs-comment"># pip cache</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> --mount=<span class="hljs-built_in">type</span>=cache,target=/root/.cache,<span class="hljs-built_in">id</span>=test-poetry-cache \</span><br><span class="language-bash">    pip config <span class="hljs-built_in">set</span> global.index-url https://mirrors.aliyun.com/pypi/simple &amp;&amp; \</span><br><span class="language-bash">    pip install poetry</span><br><br><span class="hljs-comment"># poetry cache</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> --mount=<span class="hljs-built_in">type</span>=cache,target=/root/.cache,<span class="hljs-built_in">id</span>=test-poetry-cache \</span><br><span class="language-bash">    --mount=<span class="hljs-built_in">type</span>=<span class="hljs-built_in">bind</span>,<span class="hljs-built_in">source</span>=./app/poetry.lock,target=poetry.lock \</span><br><span class="language-bash">    --mount=<span class="hljs-built_in">type</span>=<span class="hljs-built_in">bind</span>,<span class="hljs-built_in">source</span>=./app/pyproject.toml,target=pyproject.toml \</span><br><span class="language-bash">    poetry install --no-root --only main</span><br><br></code></pre></td></tr></table></figure><ol start="6"><li>buildx 配置指定 cache</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker buildx build \<br>    --target dockerfile-target \<br>    --push \<br>    -t xxxx.com:5000/xxx:latest \<br>    --build-arg &quot;VERSION=1.0.0&quot; \<br>    --cache-to type=registry,ref=xxxx.com:5000/cache:latest \<br>    --cache-from type=registry,ref=xxxx.com:5000/cache:latest \<br>    -f Dockerfile .<br></code></pre></td></tr></table></figure><ol start="7"><li>使用认证</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker login xxxx<br>docker buildx build xxx<br></code></pre></td></tr></table></figure><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ol><li><a href="https://docs.docker.com/build/buildkit/configure/">Configure BuildKit</a></li><li><a href="https://docs.docker.com/reference/cli/docker/buildx/build/">docker buildx build</a></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>docker</tag>
      
      <tag>buildx</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Nexus3 重置密码</title>
    <link href="/2025/05/24/nexus3-reset-password/"/>
    <url>/2025/05/24/nexus3-reset-password/</url>
    
    <content type="html"><![CDATA[<h1 id="nexus3-reset-password"><a href="#nexus3-reset-password" class="headerlink" title="nexus3 reset password"></a>nexus3 reset password</h1><ol><li>启用 h2 数据库 http 界面<br>在<code>$datadir/etc/nexus.properties</code>(&#x2F;nexus-data)增加配置</li></ol><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">nexus.h2.httpListenerEnabled</span>=<span class="hljs-literal">true</span><br><span class="hljs-attr">nexus.h2.httpListenerPort</span>=<span class="hljs-number">1234</span><br></code></pre></td></tr></table></figure><ol start="2"><li>映射 1234 端口到主机端口，重启服务</li><li>配置 1234 端口 ssh 映射</li></ol><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ssh</span> -L <span class="hljs-number">1234</span>:<span class="hljs-number">192.168.1.10:1234</span> user@<span class="hljs-number">192.168.1.10</span><br></code></pre></td></tr></table></figure><ol start="4"><li>访问 <a href="http://localhost:1234,使用配置连接">http://localhost:1234,使用配置连接</a></li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">Driver:</span> <span class="hljs-string">org.h2.Driver</span><br><span class="hljs-attr">JDBC URL:</span> <span class="hljs-string">jdbc:h2:file:nexus</span><br><span class="hljs-attr">username:</span> <span class="hljs-string">&lt;LEAVE</span> <span class="hljs-string">BLANK&gt;</span><br><span class="hljs-attr">password:</span> <span class="hljs-string">&lt;LEAVE</span> <span class="hljs-string">BLANK&gt;</span><br></code></pre></td></tr></table></figure><ol start="5"><li>查找 admin 用户记录,更新为默认密码<code>admin123</code></li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> security_user <span class="hljs-keyword">where</span> id<span class="hljs-operator">=</span><span class="hljs-string">&#x27;admin&#x27;</span>;<br><br><span class="hljs-keyword">update</span> security_user <span class="hljs-keyword">SET</span> password<span class="hljs-operator">=</span><span class="hljs-string">&#x27;$shiro1$SHA-512$1024$NE+wqQq/TmjZMvfI7ENh/g==$V4yPw8T64UQ6GfJfxYq2hLsVrBY8D1v+bktfOxGdt4b/9BthpWPNUy/CBk6V9iA0nHpzYzJFWO8v/tZFtES8CA==&#x27;</span>, status<span class="hljs-operator">=</span><span class="hljs-string">&#x27;active&#x27;</span> <span class="hljs-keyword">WHERE</span> id<span class="hljs-operator">=</span><span class="hljs-string">&#x27;admin&#x27;</span>;<br></code></pre></td></tr></table></figure><ol start="6"><li><code>nexus.properties</code>恢复默认配置，重启服务</li></ol><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ol><li><a href="https://www.declarativesystems.com/2025/03/11/reset-nexus-admin-password.html">How to reset nexus admin password in Nexus 3 OSS</a></li><li><a href="https://support.sonatype.com/hc/en-us/articles/213467158-How-to-reset-a-forgotten-admin-password-in-Sonatype-Nexus-Repository-3">How to reset a forgotten admin password in Sonatype Nexus Repository 3</a></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>nexus3</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ansible-playbook中根据主机ip聚合</title>
    <link href="/2025/05/13/ansible-unique-host-filter/"/>
    <url>/2025/05/13/ansible-unique-host-filter/</url>
    
    <content type="html"><![CDATA[<h1 id="ansible-playbook中根据主机ip聚合"><a href="#ansible-playbook中根据主机ip聚合" class="headerlink" title="ansible-playbook中根据主机ip聚合"></a>ansible-playbook中根据主机ip聚合</h1><ol><li>inventery测试文件</li></ol><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[hosts]</span><br>172.17.100.100 <span class="hljs-attr">ansible_ssh_user</span>=root ansible_ssh_pass=password<br>test-1 <span class="hljs-attr">ansible_host</span>=<span class="hljs-number">172.17</span>.<span class="hljs-number">100.100</span> ansible_ssh_user=root ansible_ssh_pass=password<br>test-2 <span class="hljs-attr">ansible_host</span>=<span class="hljs-number">172.17</span>.<span class="hljs-number">100.100</span> ansible_ssh_user=root ansible_ssh_pass=password<br>test-3 <span class="hljs-attr">ansible_host</span>=<span class="hljs-number">172.17</span>.<span class="hljs-number">100.100</span> ansible_ssh_user=root ansible_ssh_pass=password<br></code></pre></td></tr></table></figure><ol start="2"><li>palybook</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">hosts</span><br>  <span class="hljs-attr">gather_facts:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">tasks:</span><br>  <span class="hljs-comment"># Build leader hosts list based on unique ansible_host</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">print</span> <span class="hljs-string">debug</span> <span class="hljs-string">host</span> <span class="hljs-string">info</span><br>    <span class="hljs-attr">debug:</span><br>      <span class="hljs-attr">msg:</span> <span class="hljs-string">&gt;-</span><br><span class="hljs-string">        &#123;&#123; ansible_play_hosts&#125;&#125; &#123;&#123; inventory_hostname &#125;&#125; &#123;&#123; hostvars &#125;&#125;</span><br><span class="hljs-string"></span>    <span class="hljs-attr">run_once:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">delegate_to:</span> <span class="hljs-string">localhost</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">方式1</span><br>    <span class="hljs-attr">run_once:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">delegate_to:</span> <span class="hljs-string">localhost</span><br>    <span class="hljs-attr">block:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">set_fact:</span><br>          <span class="hljs-attr">inventory_leader_str:</span> <span class="hljs-string">|</span><br><span class="hljs-string">              &#123;%- set combined = [] %&#125;</span><br><span class="hljs-string">              &#123;%- for host in ansible_play_hosts %&#125;</span><br><span class="hljs-string">              &#123;%- set item = &#123;</span><br><span class="hljs-string">                  &#x27;host_key&#x27;: hostvars[host].ansible_host | default(host),</span><br><span class="hljs-string">                  &#x27;inventory_hostname&#x27;: host</span><br><span class="hljs-string">              &#125; %&#125;</span><br><span class="hljs-string">              &#123;&#123; combined.append(item) &#125;&#125;</span><br><span class="hljs-string">              &#123;%- endfor %&#125;</span><br><span class="hljs-string">              &#123;# 去重 host_key #&#125;</span><br><span class="hljs-string">              &#123;%- set seen = [] %&#125;</span><br><span class="hljs-string">              &#123;%- set result = [] %&#125;</span><br><span class="hljs-string">              &#123;%- for item in combined %&#125;</span><br><span class="hljs-string">              &#123;%- if item.host_key not in seen %&#125;</span><br><span class="hljs-string">                  &#123;&#123; seen.append(item.host_key) &#125;&#125;</span><br><span class="hljs-string">                  &#123;&#123; result.append(item.inventory_hostname) &#125;&#125;</span><br><span class="hljs-string">              &#123;%- endif %&#125;</span><br><span class="hljs-string">              &#123;%- endfor %&#125;</span><br><span class="hljs-string">              &#123;&#123; result &#125;&#125;</span><br><span class="hljs-string"></span>      <span class="hljs-bullet">-</span> <span class="hljs-attr">set_fact:</span><br>          <span class="hljs-attr">inventory_leader_1:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; inventory_leader_str|from_yaml &#125;&#125;</span>&quot;</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">pring</span> <span class="hljs-string">inventory_leader</span><br>        <span class="hljs-attr">debug:</span><br>          <span class="hljs-attr">msg:</span> <span class="hljs-string">&gt;-</span><br><span class="hljs-string">              &#123;&#123; inventory_leader_1 &#125;&#125;</span><br><span class="hljs-string"></span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">方式2</span><br>    <span class="hljs-attr">block:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Set</span> <span class="hljs-string">leader_key</span> <span class="hljs-string">per</span> <span class="hljs-string">host</span><br>        <span class="hljs-attr">set_fact:</span><br>          <span class="hljs-attr">leader_key:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; ansible_host | default(inventory_hostname) &#125;&#125;</span>&quot;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">debug</span> <span class="hljs-number">2</span><br>        <span class="hljs-attr">debug:</span><br>          <span class="hljs-attr">msg:</span> <span class="hljs-string">&gt;-</span><br><span class="hljs-string">              &#123;&#123; ansible_play_hosts | map(&#x27;extract&#x27;, hostvars) | unique(attribute=&#x27;leader_key&#x27;) | map(attribute=&#x27;inventory_hostname&#x27;) | list&#125;&#125;</span><br><span class="hljs-string"></span>        <span class="hljs-attr">run_once:</span> <span class="hljs-literal">true</span><br>        <span class="hljs-attr">delegate_to:</span> <span class="hljs-string">localhost</span><br><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">方式3</span><br>    <span class="hljs-attr">block:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">gather</span> <span class="hljs-string">facts</span><br>        <span class="hljs-attr">setup:</span><br>          <span class="hljs-attr">filter:</span> <span class="hljs-string">ansible_default_ipv4</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">debug</span> <span class="hljs-number">3</span><br>        <span class="hljs-attr">debug:</span><br>          <span class="hljs-attr">msg:</span> <span class="hljs-string">&gt;-</span><br><span class="hljs-string">            &#123;&#123; ansible_play_hosts | map(&#x27;extract&#x27;, hostvars) | unique(attribute=&#x27;ansible_default_ipv4.address&#x27;) | map(attribute=&#x27;inventory_hostname&#x27;) | list&#125;&#125;</span><br><span class="hljs-string"></span>        <span class="hljs-attr">run_once:</span> <span class="hljs-literal">true</span><br>        <span class="hljs-attr">delegate_to:</span> <span class="hljs-string">localhost</span><br></code></pre></td></tr></table></figure><h1 id="解释"><a href="#解释" class="headerlink" title="解释"></a>解释</h1><ol><li>方式1使用jinja语法，选出首次出现host_key对应的inventory_hostname</li><li>方式2使用map和unique，根据leader_key去重</li><li>方式3使用setup模块，获取ansible_default_ipv4.address，然后根据ip地址去重,需要连接主机获取基本信息</li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>ansible</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>RPMDB 文件损坏问题分析</title>
    <link href="/2025/05/13/rpmdb-failed/"/>
    <url>/2025/05/13/rpmdb-failed/</url>
    
    <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>本文介绍RPMDB 文件损坏问题分析</p><h1 id="检查使用rpm的进程"><a href="#检查使用rpm的进程" class="headerlink" title="检查使用rpm的进程"></a>检查使用rpm的进程</h1><ol><li>检查正在使用 &#x2F;var&#x2F;lib&#x2F;rpm 的进程<code>fuser -v /var/lib/rpm</code></li><li>停止任何由 fuser -v &#x2F;var&#x2F;lib&#x2F;rpm 报告的服务或进程</li><li>删除 &#x2F;var&#x2F;lib&#x2F;rpm&#x2F;Packages 文件<code>rm /var/lib/rpm/__db*</code></li></ol><h1 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h1><ol><li>安装rpm-deathwatch源</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">Centos7</span><br>curl https://people.redhat.com/kwalker/repos/rpm-deathwatch/rhel7/rpm-deathwatch-rhel-7.repo -o /etc/yum.repos.d/rpm-deathwatch.repo<br><span class="hljs-meta prompt_"># </span><span class="language-bash">Centos8</span><br>curl https://people.redhat.com/kwalker/repos/rpm-deathwatch/rhel8/rpm-deathwatch-rhel-8.repo -o /etc/yum.repos.d/rpm-deathwatch.repo<br></code></pre></td></tr></table></figure><ol start="2"><li>安装rpm-deathwatch</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum install -y yum-utils kernel-&#123;devel,headers,debuginfo&#125;-$(uname -r) systemtap &amp;&amp; debuginfo-install -y kernel<br>yum install rpm-deathwatch<br></code></pre></td></tr></table></figure><ol start="3"><li>启动rpm-deathwatch服务</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">开机启动</span><br>systemctl enable --now rpm-deathwatch<br></code></pre></td></tr></table></figure><ol start="4"><li>检测rpm-deathwatch服务</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl status rpm-deathwatch<br></code></pre></td></tr></table></figure><ol start="5"><li>查看rpm-deathwatch日志<code>/var/log/rpm-deathwatch*</code></li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">Fri Dec  4 00:00:17 2020 EST: sig.send:</span> <span class="hljs-string">SIGKILL</span> <span class="hljs-string">was</span> <span class="hljs-string">sent</span> <span class="hljs-string">to</span> <span class="hljs-string">yum</span> <span class="hljs-string">(pid:31171)</span> <span class="hljs-string">by</span> <span class="hljs-string">uid:0</span> <span class="hljs-string">using</span> <span class="hljs-string">signal_generate</span><br><span class="hljs-attr">Fri Dec  4 00:00:17 2020 EST: sig.send: Process tree:</span><br> <span class="hljs-string">-&gt;systemd[1]</span> <span class="hljs-bullet">-</span> <span class="hljs-string">&lt;None</span> <span class="hljs-string">found&gt;</span><br>  <span class="hljs-string">-&gt;BESClient[3563]</span> <span class="hljs-bullet">-</span> <span class="hljs-string">&lt;None</span> <span class="hljs-string">found&gt;</span><br><span class="hljs-attr">Fri Dec  4 00:00:17 2020 EST: kprocess.exit:</span> <span class="hljs-string">yum(pid:31171)</span> <span class="hljs-bullet">-</span> <span class="hljs-string">Code</span>   <span class="hljs-number">9</span> <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;/usr/bin/python /usr/bin/yum -y update</span><br></code></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">Tue May 13 14:49:17 2025 CST:</span> <span class="hljs-string">Now</span> <span class="hljs-string">monitoring</span> <span class="hljs-string">for</span> <span class="hljs-string">process</span> <span class="hljs-string">termination</span> <span class="hljs-string">signals</span><br><span class="hljs-attr">Tue May 13 15:06:54 2025 CST: syscall.sys_group_exit:</span> <span class="hljs-string">rpm(pid:13060)</span><br><span class="hljs-attr">Tue May 13 15:06:54 2025 CST: kprocess.exit:</span> <span class="hljs-string">rpm(pid:13060)</span> <span class="hljs-bullet">-</span> <span class="hljs-string">Code</span> <span class="hljs-number">256</span> <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;rpm -q qperf&quot;</span><br><span class="hljs-attr">Tue May 13 15:06:58 2025 CST: sys.kill:</span> <span class="hljs-string">kill(pid:13155)</span> <span class="hljs-string">called</span> <span class="hljs-string">kill(13064,</span> <span class="hljs-string">SIGKILL)</span><br><span class="hljs-attr">Tue May 13 15:06:58 2025 CST: sig.send:</span> <span class="hljs-string">SIGKILL</span> <span class="hljs-string">was</span> <span class="hljs-string">sent</span> <span class="hljs-string">to</span> <span class="hljs-string">yum</span> <span class="hljs-string">(pid:13064)</span> <span class="hljs-string">by</span> <span class="hljs-string">uid:0</span> <span class="hljs-string">using</span> <span class="hljs-string">signal_generate</span><br><span class="hljs-attr">Tue May 13 15:06:58 2025 CST: sig.send: Process tree:</span><br> <span class="hljs-string">-&gt;systemd[1]</span> <span class="hljs-bullet">-</span> <span class="hljs-string">&lt;None</span> <span class="hljs-string">found&gt;</span><br>  <span class="hljs-string">-&gt;sh[13149]</span> <span class="hljs-bullet">-</span> <span class="hljs-string">/bin/sh</span> <span class="hljs-string">-c</span> <span class="hljs-string">ps</span> <span class="hljs-string">-ef</span> <span class="hljs-string">|</span> <span class="hljs-string">grep</span> <span class="hljs-string">&#x27;yum install&#x27;</span> <span class="hljs-string">|</span> <span class="hljs-string">grep</span> <span class="hljs-string">-v</span> <span class="hljs-string">grep</span> <span class="hljs-string">|</span> <span class="hljs-string">awk</span> <span class="hljs-string">&#x27;&#123;print &#125;&#x27;</span> <span class="hljs-string">|</span> <span class="hljs-string">xargs</span> <span class="hljs-string">kill</span> <span class="hljs-number">-9</span><br>   <span class="hljs-string">-&gt;xargs[13154]</span> <span class="hljs-bullet">-</span> <span class="hljs-string">xargs</span> <span class="hljs-string">kill</span> <span class="hljs-number">-9</span><br>    <span class="hljs-string">-&gt;kill[13155]</span> <span class="hljs-bullet">-</span> <span class="hljs-string">xargs</span> <span class="hljs-string">kill</span> <span class="hljs-number">-9</span><br><span class="hljs-attr">Tue May 13 15:06:58 2025 CST: kprocess.exit:</span> <span class="hljs-string">yum(pid:13064)</span> <span class="hljs-bullet">-</span> <span class="hljs-string">Code</span>   <span class="hljs-number">9</span> <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;/usr/bin/python /bin/yum install qperf -y&quot;</span><br><span class="hljs-attr">Tue May 13 15:07:26 2025 CST: syscall.sys_group_exit:</span> <span class="hljs-string">python(pid:14058)</span><br><span class="hljs-attr">Tue May 13 15:07:26 2025 CST: kprocess.exit:</span> <span class="hljs-string">python(pid:14058)</span> <span class="hljs-bullet">-</span> <span class="hljs-string">Code</span> <span class="hljs-number">256</span> <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;/usr/bin/python --&quot;</span><br></code></pre></td></tr></table></figure><h1 id="原因分析"><a href="#原因分析" class="headerlink" title="原因分析"></a>原因分析</h1><p>rpm、yum 或 dnf 没有干净地退出，在<code>/var/lib/rpm</code>留下锁文件(<code>__db001</code> –  <code>__db005</code>)。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">查看留下锁文件的进程 pid</span><br>db_stat -C l -h /var/lib/rpm<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">检查过期锁文件</span><br>cd /var/lib/rpm<br>/usr/lib/rpm/rpmdb_stat -CA<br></code></pre></td></tr></table></figure><p>过期的锁通常是由于进程以异常方式被终止（电源丢失、内核崩溃、“kill”命令）。<br>常见原因是自动化工具超时结束进程，或者yum进程被<code>kill -9</code>，没有让 rpm 清除锁文件。<br>此问题可以通过停止使用 <code>/var/lib/rpm</code> 目录下文件的所有进程并删除这些文件，可以通过<code>lsof | grep /var/lib/rpm</code>检查，或通过重启（重启也会删除这些文件）来解决。</p><h1 id="处理办法"><a href="#处理办法" class="headerlink" title="处理办法"></a>处理办法</h1><ol><li>检查正在使用 &#x2F;var&#x2F;lib&#x2F;rpm 的进程<code>fuser -v /var/lib/rpm</code></li><li>停止任何由 fuser -v &#x2F;var&#x2F;lib&#x2F;rpm 报告的服务或进程</li><li>删除 &#x2F;var&#x2F;lib&#x2F;rpm&#x2F;Packages 文件<code>rm /var/lib/rpm/__db*</code></li></ol><h1 id="可选处理过程"><a href="#可选处理过程" class="headerlink" title="可选处理过程"></a>可选处理过程</h1><ol><li>检查rpm是否正常<code>rpm –quiet -qa</code> </li><li>重建索引<code>rpm --rebuilddb</code></li><li>清理缓存<code>yum clean all</code></li></ol><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ol><li><a href="https://access.redhat.com/solutions/3330211">debug recurring rpm database corruption</a></li></ol>]]></content>
    
    
    <categories>
      
      <category>yum</category>
      
    </categories>
    
    
    <tags>
      
      <tag>rpmdb</tag>
      
      <tag>yum</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Git配置代理</title>
    <link href="/2025/04/15/git-proxy/"/>
    <url>/2025/04/15/git-proxy/</url>
    
    <content type="html"><![CDATA[<h1 id="配置git使用代理克隆代码"><a href="#配置git使用代理克隆代码" class="headerlink" title="配置git使用代理克隆代码"></a>配置git使用代理克隆代码</h1><h1 id="问题来源"><a href="#问题来源" class="headerlink" title="问题来源"></a>问题来源</h1><p>git clone代码时，遇到<code>unable to access &#39;...&#39;</code>,<code>Couldn&#39;t resolve host &#39;...&#39;</code>, 可以配置代理解决。<br>遇到<code>unable to access &#39;https://...&#39;: Unknown SSL protocol error in connection to ...:443</code>, 可以关闭<code>sslVerify</code>解决</p><h1 id="命令行配置"><a href="#命令行配置" class="headerlink" title="命令行配置"></a>命令行配置</h1><h2 id="1-配置git的http代理"><a href="#1-配置git的http代理" class="headerlink" title="1. 配置git的http代理"></a>1. 配置git的http代理</h2><p>查看代理</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global --get http.proxy<br>git config --global --get https.proxy<br></code></pre></td></tr></table></figure><p>配置代理</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 格式 http://proxyUsername:proxyPassword@proxy.server.com:port</span><br><span class="hljs-comment"># 全局代理</span><br>git config --global http.proxy http://127.0.0.1:7890<br><span class="hljs-comment"># 域名代理</span><br>git config --global http.https://github.com.proxy http://http://127.0.0.1:7890<br>git config --global http.https://github.com.sslVerify <span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure><p>取消配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global --<span class="hljs-built_in">unset</span> http.proxy<br>git config --global --<span class="hljs-built_in">unset</span> https.proxy<br></code></pre></td></tr></table></figure><h2 id="2-使用GIT-SSH-COMMAND-环境变量配置git的ssh代理"><a href="#2-使用GIT-SSH-COMMAND-环境变量配置git的ssh代理" class="headerlink" title="2. 使用GIT_SSH_COMMAND 环境变量配置git的ssh代理"></a>2. 使用<code>GIT_SSH_COMMAND</code> 环境变量配置git的ssh代理</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 临时配置代理</span><br><span class="hljs-built_in">export</span> GIT_SSH_COMMAND=<span class="hljs-string">&#x27;ssh -o ProxyCommand=&quot;connect -S 127.0.0.1:7890 %h %p&quot;&#x27;</span><br><span class="hljs-comment"># 配置全局</span><br>git config --global core.sshCommand <span class="hljs-string">&#x27;ssh -o ProxyCommand=&quot;connect -S 127.0.0.1:7890 %h %p&quot;&#x27;</span><br><span class="hljs-comment"># 配置本次命令</span><br>git <span class="hljs-built_in">clone</span> -c=core.sshCommand <span class="hljs-string">&#x27;ssh -o ProxyCommand=&quot;connect -S 127.0.0.1:7890 %h %p&quot;&#x27;</span> git@github.com:user/repo.git<br><span class="hljs-comment"># 配置本地仓库</span><br>git config core.sshCommand <span class="hljs-string">&#x27;ssh -o ProxyCommand=&quot;connect -S 127.0.0.1:7890 %h %p&quot;&#x27;</span><br><span class="hljs-comment"># 配置全局仓库</span><br>git config --global core.sshCommand <span class="hljs-string">&#x27;ssh -o ProxyCommand=&quot;connect -S 127.0.0.1:7890 %h %p&quot;&#x27;</span><br></code></pre></td></tr></table></figure><h1 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h1><h2 id="1-http克隆"><a href="#1-http克隆" class="headerlink" title="1. http克隆"></a>1. http克隆</h2><p>修改<code>~/.ssh/config</code>配置文件<br>windows：<code>C:\Users\用户名\.gitconfig</code><br>linux：<code>~/.gitconfig</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">[http]<br>[http <span class="hljs-string">&quot;https://github.com&quot;</span>]<br>proxy = http://127.0.0.1:7890<br></code></pre></td></tr></table></figure><h2 id="2-ssh代理"><a href="#2-ssh代理" class="headerlink" title="2. ssh代理"></a>2. ssh代理</h2><p>修改<code>~/.ssh/config</code>配置文件<br>windows</p><details><summary>windows下创建配置文件</summary><pre><code class="language-powershell">$sshDir = "$env:USERPROFILE\.ssh"$configFile = Join-Path $sshDir "config"<p># Create .ssh directory if it doesn’t exist<br>if (-not (Test-Path $sshDir)) &#123;<br>    New-Item -Path $sshDir -ItemType Directory | Out-Null<br>&#125;</p><p># Create config file if it doesn’t exist<br>if (-not (Test-Path $configFile)) &#123;<br>    New-Item -Path $configFile -ItemType File | Out-Null<br>&#125;<br></code></pre></p></details><p><code>notepad $env:USERPROFILE\.ssh\config</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">Host github.com<br>    Hostname github.com<br>    ServerAliveInterval 55<br>    ForwardAgent <span class="hljs-built_in">yes</span><br>    ProxyCommand connect -H 127.0.0.1:7890 %h %p<br></code></pre></td></tr></table></figure><p>linux：<br><code>mkdir ~/.ssh &amp;&amp; vim ~/.ssh/config</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">Host github.com<br>    Hostname github.com<br>    ServerAliveInterval 55<br>    ForwardAgent <span class="hljs-built_in">yes</span><br>    ProxyCommand nc -x 127.0.0.1:7890 %h %p<br></code></pre></td></tr></table></figure><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><ol><li>linux下也可以通过<code>export ALL_PROXY=127.0.0.1:7890</code>，配置全局代理。</li><li><code>connect</code>命令来自git,位置在<code>C:\Program Files\Git\mingw64\bin\connect.exe</code>。<br>ubuntu下可以通过<code>sudo apt install connect-proxy</code>安装。</li><li><code>connect</code>命令参考</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#  connect.exe [-dnhst45] [-p local-port]</span><br><span class="hljs-comment">#           [-H proxy-server[:port]] [-S [user@]socks-server[:port]]</span><br><span class="hljs-comment">#           [-T proxy-server[:port]]</span><br><span class="hljs-comment">#           [-c telnet-proxy-command]</span><br><span class="hljs-comment">#           host port</span><br><span class="hljs-comment"># -H 指定http代理服务</span><br>connect -H 127.0.0.1:10808 github.com 443<br><span class="hljs-comment"># -S 指定SOCKS 代理服务器</span><br>connect -S 127.0.0.1:10808 github.com 443<br></code></pre></td></tr></table></figure><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ol><li><a href="https://github.com/larryhou/connect-proxy">https://github.com/larryhou/connect-proxy</a></li><li><a href="https://git-scm.com/docs/git-config/2.16.6">https://git-scm.com/docs/git-config/2.16.6</a></li><li><a href="https://gist.github.com/alphamarket/e0ed48f8755bebdc7451b758bc6828fa">https://gist.github.com/alphamarket/e0ed48f8755bebdc7451b758bc6828fa</a></li><li><a href="https://gist.github.com/ozbillwang/005bd1dfc597a2f3a00148834ad3e551">https://gist.github.com/ozbillwang/005bd1dfc597a2f3a00148834ad3e551</a></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>git</tag>
      
      <tag>proxy</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Authelia 使用说明</title>
    <link href="/2025/04/14/authelia-usage/"/>
    <url>/2025/04/14/authelia-usage/</url>
    
    <content type="html"><![CDATA[<h2 id="authelia使用说明"><a href="#authelia使用说明" class="headerlink" title="authelia使用说明"></a>authelia使用说明</h2><p>authelia 是一个专门用于应用程序和用户安全的 2FA 和 SSO 认证服务器。可以集成到反向代理服务，为其提供身份验证。<br>相对其他认证服务更加轻量，高效。有扩展性，支持多因素认证，单点登录，权限管理。<br>Authelia 使用会话 cookie 来授权用户访问各种受保护的网站。配置会话 cookie 行为为请求的域提供授权。</p><h2 id="authelia官方文档配置"><a href="#authelia官方文档配置" class="headerlink" title="authelia官方文档配置"></a>authelia官方文档配置</h2><p>Host: authelia<br>Port: 9091<br>TLS: true<br>Domain: example.com<br>Subdomains: auth</p><h2 id="authelia安装"><a href="#authelia安装" class="headerlink" title="authelia安装"></a>authelia安装</h2><p>可以使用<code>docker compose</code>启动，配置文件如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">services:</span><br>  <span class="hljs-attr">authelia:</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">authelia</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">authelia/authelia:latest</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">unless-stopped</span><br>    <span class="hljs-attr">ports:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-number">9091</span><span class="hljs-string">:9091</span><br>    <span class="hljs-attr">volumes:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;./config:/config&#x27;</span><br></code></pre></td></tr></table></figure><p>首次启动后<code>config</code>目录下会生成默认配置文件，可以进行修改。<br>配置文件<code>configuration.yml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">server:</span><br>  <span class="hljs-attr">address:</span> <span class="hljs-string">&#x27;tcp://0.0.0.0:9091/&#x27;</span>  <span class="hljs-comment"># 监听端口，支持 tcp://ip:port/path</span><br><br><span class="hljs-attr">log:</span><br>  <span class="hljs-attr">level:</span> <span class="hljs-string">&#x27;info&#x27;</span>  <span class="hljs-comment"># debug可以用调试</span><br><br><span class="hljs-attr">identity_validation:</span>  <br>  <span class="hljs-attr">reset_password:</span> <br>    <span class="hljs-attr">jwt_secret:</span> <span class="hljs-string">&#x27;a_very_important_secret&#x27;</span>  <span class="hljs-comment"># 重置密码用的加密秘钥</span><br><br><span class="hljs-attr">authentication_backend:</span>  <span class="hljs-comment"># 认证后端配置支持File和LDAP</span><br>  <span class="hljs-attr">file:</span><br>    <span class="hljs-attr">path:</span> <span class="hljs-string">&#x27;/config/users_database.yml&#x27;</span>  <span class="hljs-comment"># 用户信息配置文件</span><br><br><span class="hljs-attr">access_control:</span><br>  <span class="hljs-attr">default_policy:</span> <span class="hljs-string">&#x27;deny&#x27;</span>  <span class="hljs-comment"># 默认策略，建议 deny，支持 bypass、one_factor、two_factor、deny</span><br>  <span class="hljs-attr">rules:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">domain:</span> <span class="hljs-string">&#x27;public.example.com&#x27;</span><br>      <span class="hljs-attr">policy:</span> <span class="hljs-string">&#x27;bypass&#x27;</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">domain:</span> <span class="hljs-string">&#x27;traefik.example.com&#x27;</span><br>      <span class="hljs-attr">policy:</span> <span class="hljs-string">&#x27;one_factor&#x27;</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">domain:</span> <span class="hljs-string">&#x27;secure.example.com&#x27;</span><br>      <span class="hljs-attr">policy:</span> <span class="hljs-string">&#x27;two_factor&#x27;</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">domain:</span> <span class="hljs-string">&#x27;private.example.com&#x27;</span><br>      <span class="hljs-attr">domain_regex:</span> <span class="hljs-string">&#x27;^(\d+\-)?priv-img\.example\.com$&#x27;</span><br>      <span class="hljs-attr">policy:</span> <span class="hljs-string">&#x27;one_factor&#x27;</span><br>      <span class="hljs-attr">networks:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;internal&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;1.1.1.1&#x27;</span><br>      <span class="hljs-attr">subject:</span><br>      <span class="hljs-bullet">-</span> [<span class="hljs-string">&#x27;user:adam&#x27;</span>]<br>      <span class="hljs-bullet">-</span> [<span class="hljs-string">&#x27;user:fred&#x27;</span>]<br>      <span class="hljs-bullet">-</span> [<span class="hljs-string">&#x27;group:admins&#x27;</span>]<br>      <span class="hljs-attr">methods:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;GET&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;HEAD&#x27;</span><br>      <span class="hljs-attr">resources:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;^/api.*&#x27;</span><br>      <span class="hljs-attr">query:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-bullet">-</span> <span class="hljs-attr">operator:</span> <span class="hljs-string">&#x27;present&#x27;</span><br>          <span class="hljs-attr">key:</span> <span class="hljs-string">&#x27;secure&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">operator:</span> <span class="hljs-string">&#x27;absent&#x27;</span><br>          <span class="hljs-attr">key:</span> <span class="hljs-string">&#x27;insecure&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-bullet">-</span> <span class="hljs-attr">operator:</span> <span class="hljs-string">&#x27;pattern&#x27;</span><br>          <span class="hljs-attr">key:</span> <span class="hljs-string">&#x27;token&#x27;</span><br>          <span class="hljs-attr">value:</span> <span class="hljs-string">&#x27;^(abc123|zyx789)$&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">operator:</span> <span class="hljs-string">&#x27;not pattern&#x27;</span><br>          <span class="hljs-attr">key:</span> <span class="hljs-string">&#x27;random&#x27;</span><br>          <span class="hljs-attr">value:</span> <span class="hljs-string">&#x27;^(1|2)$&#x27;</span><br><br><span class="hljs-attr">session:</span><br>  <span class="hljs-attr">secret:</span> <span class="hljs-string">&#x27;insecure_session_secret&#x27;</span>  <span class="hljs-comment"># redis中session加密秘钥</span><br><br>  <span class="hljs-attr">cookies:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">&#x27;authelia_session&#x27;</span><br>      <span class="hljs-attr">domain:</span> <span class="hljs-string">&#x27;example.com&#x27;</span>  <span class="hljs-comment"># 配置domain</span><br>      <span class="hljs-attr">authelia_url:</span> <span class="hljs-string">&#x27;https://authelia.example.com&#x27;</span><br>      <span class="hljs-attr">expiration:</span> <span class="hljs-string">&#x27;1 hour&#x27;</span><br>      <span class="hljs-attr">inactivity:</span> <span class="hljs-string">&#x27;5 minutes&#x27;</span><br><br>  <span class="hljs-comment"># redis:  # 默认使用内存，也可以使用redis</span><br>  <span class="hljs-comment">#   host: &#x27;redis&#x27;</span><br>  <span class="hljs-comment">#   port: 6379</span><br><br><br><span class="hljs-attr">regulation:</span>  <span class="hljs-comment"># 登录失败次数限制，默认禁止模式是user，支持配置ip</span><br>  <span class="hljs-attr">max_retries:</span> <span class="hljs-number">3</span><br>  <span class="hljs-attr">find_time:</span> <span class="hljs-string">&#x27;2 minutes&#x27;</span>  <span class="hljs-comment"># 2分钟尝试3次</span><br>  <span class="hljs-attr">ban_time:</span> <span class="hljs-string">&#x27;5 minutes&#x27;</span><br><br><span class="hljs-attr">storage:</span>  <span class="hljs-comment"># 存储用户首选项、2FA 设备句柄和密钥、身份验证日志等, 支持pg，mysql，sqlite</span><br>  <span class="hljs-attr">encryption_key:</span> <span class="hljs-string">&#x27;a_very_important_secret&#x27;</span>  <span class="hljs-comment"># 存储数据库加密秘钥</span><br>  <span class="hljs-attr">local:</span> <br>    <span class="hljs-attr">path:</span> <span class="hljs-string">&#x27;/config/db.sqlite3&#x27;</span><br><br><span class="hljs-attr">notifier:</span>  <span class="hljs-comment"># 身份验证通知</span><br>  <span class="hljs-attr">filesystem:</span><br>    <span class="hljs-attr">filename:</span> <span class="hljs-string">&#x27;/config/notification.txt&#x27;</span><br>  <span class="hljs-comment"># smtp:</span><br>  <span class="hljs-comment">#   username: &#x27;test&#x27;</span><br>  <span class="hljs-comment">#   password: &#x27;password&#x27;</span><br>  <span class="hljs-comment">#   address: &#x27;smtp://mail.example.com:25&#x27;</span><br>  <span class="hljs-comment">#   sender: &#x27;admin@example.com&#x27;</span><br><br><br><span class="hljs-attr">identity_providers:</span>  <span class="hljs-comment"># OpenID 连接</span><br>  <span class="hljs-attr">oidc:</span><br>    <span class="hljs-attr">hmac_secret:</span> <span class="hljs-string">&#x27;this_is_a_secret_abc123abc123abc&#x27;</span>  <span class="hljs-comment"># 加密秘钥</span><br>    <span class="hljs-attr">claims_policies:</span><br>      <span class="hljs-attr">legacy_claims:</span>  <span class="hljs-comment"># </span><br>        <span class="hljs-attr">id_token:</span>  <span class="hljs-comment"># id_token 增加配置项</span><br>           <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;email&#x27;</span><br>           <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;email_verified&#x27;</span><br>           <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;preferred_username&#x27;</span> <span class="hljs-comment"># 用户名</span><br>           <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;name&#x27;</span>  <span class="hljs-comment"># 昵称</span><br>    <span class="hljs-attr">jwks:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">key_id:</span> <span class="hljs-string">&#x27;example&#x27;</span><br>        <span class="hljs-attr">key:</span> <span class="hljs-string">|</span><br><span class="hljs-string">          -----BEGIN RSA PRIVATE KEY-----</span><br><span class="hljs-string">          ...</span><br><span class="hljs-string">          -----END RSA PRIVATE KEY-----</span><br><span class="hljs-string"></span>    <span class="hljs-attr">clients:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">client_id:</span> <span class="hljs-string">&#x27;unique-client-identifier&#x27;</span> <span class="hljs-comment"># 唯一id</span><br>        <span class="hljs-attr">client_name:</span> <span class="hljs-string">&#x27;Alist&#x27;</span>  <span class="hljs-comment"># 应用名称</span><br>        <span class="hljs-attr">client_secret:</span> <span class="hljs-string">&#x27;$pbkdf2-sha512$310000$c8p78n7pUMln0jzvd4aK4Q$JNRBzwAo0ek5qKn50cFzzvE9RXV88h1wJn5KGiHrD0YKtZaR/nCb2CJPOsKaPK0hjf.9yHxzQGZziziccp6Yng&#x27;</span>  <span class="hljs-comment"># 加密key</span><br>        <span class="hljs-attr">claims_policy:</span> <span class="hljs-string">&quot;legacy_claims&quot;</span>  <span class="hljs-comment"># alist 解析id_token，需要增加信息</span><br>        <span class="hljs-attr">authorization_policy:</span> <span class="hljs-string">&#x27;one_factor&#x27;</span><br>        <span class="hljs-attr">redirect_uris:</span><br>          <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;https://alist.example.com/api/auth/sso_callback?method=get_sso_id&#x27;</span><br>          <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;https://alist.example.com/api/auth/sso_callback?method=sso_get_token&#x27;</span><br>        <span class="hljs-attr">scopes:</span><br>          <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;openid&#x27;</span><br>          <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;profile&#x27;</span><br>          <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;email&#x27;</span><br>        <span class="hljs-attr">token_endpoint_auth_method:</span> <span class="hljs-string">&#x27;client_secret_basic&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">client_id:</span> <span class="hljs-string">&#x27;unique-client-identifier&#x27;</span> <span class="hljs-comment"># 唯一id</span><br>        <span class="hljs-attr">client_name:</span> <span class="hljs-string">&#x27;Portainer&#x27;</span>  <span class="hljs-comment"># 应用名称</span><br>        <span class="hljs-attr">client_secret:</span> <span class="hljs-string">&#x27;$pbkdf2-sha512$310000$c8p78n7pUMln0jzvd4aK4Q$JNRBzwAo0ek5qKn50cFzzvE9RXV88h1wJn5KGiHrD0YKtZaR/nCb2CJPOsKaPK0hjf.9yHxzQGZziziccp6Yng&#x27;</span>  <span class="hljs-comment"># 加密key</span><br>        <span class="hljs-attr">authorization_policy:</span> <span class="hljs-string">&#x27;one_factor&#x27;</span><br>        <span class="hljs-attr">redirect_uris:</span><br>          <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;https://portainer/&#x27;</span><br>        <span class="hljs-attr">scopes:</span><br>          <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;openid&#x27;</span><br>          <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;profile&#x27;</span><br>          <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;groups&#x27;</span><br>          <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;email&#x27;</span><br>        <span class="hljs-attr">token_endpoint_auth_method:</span> <span class="hljs-string">&#x27;client_secret_post&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">client_id:</span> <span class="hljs-string">&#x27;test&#x27;</span><br>        <span class="hljs-attr">client_secret:</span> <span class="hljs-string">&#x27;test&#x27;</span>  <span class="hljs-comment"># 测试token</span><br>        <span class="hljs-attr">claims_policy:</span> <span class="hljs-string">&quot;legacy_claims&quot;</span><br>        <span class="hljs-attr">authorization_policy:</span> <span class="hljs-string">&#x27;one_factor&#x27;</span><br>        <span class="hljs-attr">redirect_uris:</span><br>          <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;https://psteniusubi.github.io/oidc-tester/authorization-code-flow.html&#x27;</span><br>        <span class="hljs-attr">scopes:</span><br>          <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;openid&#x27;</span><br>          <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;profile&#x27;</span><br>          <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;email&#x27;</span><br>        <span class="hljs-attr">token_endpoint_auth_method:</span> <span class="hljs-string">&#x27;client_secret_post&#x27;</span><br><br></code></pre></td></tr></table></figure><h2 id="身份验证"><a href="#身份验证" class="headerlink" title="身份验证"></a>身份验证</h2><p><code>users_database.yaml</code>内容，多个用户配置多个key。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-comment">###############################################################</span><br><span class="hljs-comment">#                         Users Database                      #</span><br><span class="hljs-comment">###############################################################</span><br><br><span class="hljs-comment"># This file can be used if you do not have an LDAP set up.</span><br><br><span class="hljs-comment"># List of users</span><br><span class="hljs-attr">users:</span><br>  <span class="hljs-attr">authelia:</span><br>    <span class="hljs-attr">disabled:</span> <span class="hljs-literal">false</span><br>    <span class="hljs-attr">displayname:</span> <span class="hljs-string">&#x27;Authelia User&#x27;</span><br>    <span class="hljs-comment"># Password is authelia</span><br>    <span class="hljs-attr">password:</span> <span class="hljs-string">&#x27;$6$rounds=50000$BpLnfgDsc2WD8F2q$Zis.ixdg9s/UOJYrs56b5QEZFiZECu0qZVNsIYxBaNJ7ucIL.nlxVCT5tqh8KHG8X4tlwCFm5r6NTOZZ5qRFN/&#x27;</span>  <span class="hljs-comment"># yamllint disable-line rule:line-length</span><br>    <span class="hljs-attr">email:</span> <span class="hljs-string">&#x27;authelia@authelia.com&#x27;</span><br>    <span class="hljs-attr">groups:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;admins&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;dev&#x27;</span><br></code></pre></td></tr></table></figure><h2 id="配置双因子认证"><a href="#配置双因子认证" class="headerlink" title="配置双因子认证"></a>配置双因子认证</h2><p>账号密码首次登录后，页面提示使用配置新的认证方式，支持duo、totp、webauthn。</p><h2 id="argon2id格式密码"><a href="#argon2id格式密码" class="headerlink" title="argon2id格式密码"></a>argon2id格式密码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker run --<span class="hljs-built_in">rm</span> -it authelia/authelia:latest authelia crypto <span class="hljs-built_in">hash</span> generate argon2<br></code></pre></td></tr></table></figure><h2 id="hash格式密码"><a href="#hash格式密码" class="headerlink" title="hash格式密码"></a>hash格式密码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker run --<span class="hljs-built_in">rm</span> authelia/authelia:latest authelia crypto <span class="hljs-built_in">hash</span> generate argon2 --random --random.length 64 --random.charset alphanumeric<br></code></pre></td></tr></table></figure><h2 id="64位随机密码生成"><a href="#64位随机密码生成" class="headerlink" title="64位随机密码生成"></a>64位随机密码生成</h2><p>1: Authelia</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker run --<span class="hljs-built_in">rm</span> authelia/authelia:latest authelia crypto rand --length 64 --charset alphanumeric<br></code></pre></td></tr></table></figure><p>2: Openssl</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">openssl rand -hex 64<br></code></pre></td></tr></table></figure><ol start="3"><li>Linux</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">LENGTH=64<br><span class="hljs-built_in">tr</span> -<span class="hljs-built_in">cd</span> <span class="hljs-string">&#x27;[:alnum:]&#x27;</span> &lt; /dev/urandom | <span class="hljs-built_in">fold</span> -w <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;LENGTH&#125;</span>&quot;</span> | <span class="hljs-built_in">head</span> -n 1 | <span class="hljs-built_in">tr</span> -d <span class="hljs-string">&#x27;\n&#x27;</span> ; <span class="hljs-built_in">echo</span><br></code></pre></td></tr></table></figure><h2 id="RSA秘钥生成"><a href="#RSA秘钥生成" class="headerlink" title="RSA秘钥生成"></a>RSA秘钥生成</h2><ol><li>Authelia</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker run --<span class="hljs-built_in">rm</span> -u <span class="hljs-string">&quot;<span class="hljs-subst">$(id -u)</span>:<span class="hljs-subst">$(id -g)</span>&quot;</span> -v <span class="hljs-string">&quot;<span class="hljs-subst">$(pwd)</span>&quot;</span>:/keys authelia/authelia:latest authelia crypto certificate rsa generate --common-name example.com --directory /keys<br></code></pre></td></tr></table></figure><ol start="2"><li>Openssl</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">openssl req -x509 -nodes -newkey rsa:2048 -keyout private.pem -out public.crt -sha256 -days 365 -subj <span class="hljs-string">&#x27;/CN=example.com&#x27;</span><br></code></pre></td></tr></table></figure><h2 id="Alist-SSO-配置"><a href="#Alist-SSO-配置" class="headerlink" title="Alist SSO 配置"></a>Alist SSO 配置</h2><ol><li>管理页面开启SSO</li><li>配置SSO：<br>单点登录平台: OIDC<br>单点登录客户端ID: client-id<br>单点登录客户端机密: client-secret<br>Sso oidc 用户名键: preferred_username<br>单点登录组织名称: Authelia<br>单点登录应用名称: Alist<br>单点登录端点名称: <a href="https://authelia.example.com/">https://authelia.example.com</a></li><li>个人资料绑定单点登录</li></ol><h2 id="portainer-SSO-配置"><a href="#portainer-SSO-配置" class="headerlink" title="portainer SSO 配置"></a>portainer SSO 配置</h2><ol><li>Settings -&gt; Authentication -&gt; OAuth -&gt; Custom</li><li>配置SSO<br>Client ID: portainer<br>Client Secret: insecure_secret<br>Authorization URL: <a href="https://auth.example.com/api/oidc/authorization">https://auth.example.com/api/oidc/authorization</a><br>Access Token URL: <a href="https://auth.example.com/api/oidc/token">https://auth.example.com/api/oidc/token</a><br>Resource URL: <a href="https://auth.example.com/api/oidc/userinfo">https://auth.example.com/api/oidc/userinfo</a><br>Redirect URL: <a href="https://portainer.example.com/">https://portainer.example.com</a><br>User Identifier: preferred_username<br>Scopes: openid profile groups email<br>Auth Style: In Params</li></ol><h2 id="nginx配置方法"><a href="#nginx配置方法" class="headerlink" title="nginx配置方法"></a>nginx配置方法</h2><p><a href="https://www.authelia.com/integration/proxies/nginx/">https://www.authelia.com/integration/proxies/nginx/</a></p><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ol><li><a href="https://www.authelia.com/configuration/prologue/introduction/">Authelia configuration</a></li><li><a href="https://www.authelia.com/integration/openid-connect/introduction/">Authelia openid-connect</a></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>authelia</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>nmcli-usage</title>
    <link href="/2025/04/06/nmcli-usage/"/>
    <url>/2025/04/06/nmcli-usage/</url>
    
    <content type="html"><![CDATA[<h1 id="使用nmcli连接wifi"><a href="#使用nmcli连接wifi" class="headerlink" title="使用nmcli连接wifi"></a>使用nmcli连接wifi</h1><ol><li>启用并查看可用wifi访问点</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 启用wifi</span><br>nmcli radio wifi on<br><span class="hljs-comment"># 查看wifi</span><br>nmcli dev wifi list<br></code></pre></td></tr></table></figure><ol start="2"><li>连接wifi</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nmcli dev wifi connect xxx password xxxxxx<br></code></pre></td></tr></table></figure><ol start="3"><li>配置静态ip</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># ipv4</span><br>nmcli con modify xxx ipv4.method manual ipv4.addresses 192.0.2.1/24 ipv4.gateway 192.0.2.254 ipv4.dns 192.0.2.200 ipv4.dns-search example.com<br><span class="hljs-comment"># ipv6</span><br>nmcli con modify xxx ipv6.method manual ipv6.addresses 2001:db8:1::1/64 ipv6.gateway 2001:db8:1::fffe ipv6.dns 2001:db8:1::ffbb ipv6.dns-search example.com<br><br><span class="hljs-comment"># 修改配置后需要重新激活连接</span><br>nmcli con up xxx<br></code></pre></td></tr></table></figure><ol start="4"><li>查看所有连接</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nmcli con show<br></code></pre></td></tr></table></figure><ol start="5"><li>修改连接状态</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">nmcli con up xxxx <br>nmcli con down<br>nmcli con del xxxx<br></code></pre></td></tr></table></figure><ol start="6"><li>配置自动连接</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nmcli con modify xxx con.autoconnect <span class="hljs-built_in">yes</span><br></code></pre></td></tr></table></figure><ol start="7"><li>创建热点</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># MyHostspot 连接名，  MyHostspotSSID  热点名，   12345678 热点密码</span><br>nmcli device wifi hotspot ifname wlan0 con-name MyHostspot ssid MyHostspotSSID password 12345678<br></code></pre></td></tr></table></figure><ol start="8"><li>图形化工具</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nmtui<br></code></pre></td></tr></table></figure><ol start="9"><li>显示连接</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nmcli dev wifi show-password<br></code></pre></td></tr></table></figure><ol start="10"><li>密码保存路径</li></ol><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli"><span class="hljs-string">/etc/sysconfig/network-scripts/</span>*<span class="hljs-string">.nmconnections</span><br><span class="hljs-string">/etc/netplan/</span>*<span class="hljs-string">.yaml</span><br></code></pre></td></tr></table></figure><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ol><li><a href="https://docs.redhat.com/zh-cn/documentation/red_hat_enterprise_linux/9/html/configuring_and_managing_networking/proc_connecting-to-a-wifi-network-by-using-nmcli_assembly_managing-wifi-cons">使用 nmcli 连接到 wifi 网络</a></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>nmcli</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Wake-On-Lan</title>
    <link href="/2025/04/05/wake-on-lan/"/>
    <url>/2025/04/05/wake-on-lan/</url>
    
    <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>Wake-On-Lan（WoL）是一种网络唤醒电脑主机。</p><p>原理是向电脑发送一个魔术数据包(magic packet)，网卡收到数据包后，电脑就会自动开机，用来远程控制linux开机。</p><h1 id="前置条件"><a href="#前置条件" class="headerlink" title="前置条件"></a>前置条件</h1><ol><li>BIOS支持远程开机</li><li>使用有线网卡，连接到网络</li><li>保持通电状态</li><li>同一个网络下有其他设备可以发送魔术数据包(Windowsh或Linux电脑，路由器、树莓派、手机)</li></ol><h1 id="BIOS开启网络唤醒"><a href="#BIOS开启网络唤醒" class="headerlink" title="BIOS开启网络唤醒"></a>BIOS开启网络唤醒</h1><p>BIOS中查找<code>PCI Power up, Allow PCI wake up event，Boot from PCI/PCI-E</code>选项并启用.<br>DELL的BIOS设置<code>BIOS &gt; Power Management &gt; Wake On LAN/WLAN</code></p><h1 id="检查网卡是否支持"><a href="#检查网卡是否支持" class="headerlink" title="检查网卡是否支持"></a>检查网卡是否支持</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> apt install ethtool<br><span class="hljs-built_in">sudo</span> ethtool eth0 | grep Wake-on<br>---<br><br>Supports Wake-on: pumbg<br>Wake-on: d<br></code></pre></td></tr></table></figure><p>d（禁用）、p（PHY 活动）、u（单播活动）、m（多播活动）、b（广播活动）、a（ARP 活动）和 g（魔术数据包活动）<br>WoL 需要值 g 才能工作。</p><h1 id="Linux中启用WoL"><a href="#Linux中启用WoL" class="headerlink" title="Linux中启用WoL"></a>Linux中启用WoL</h1><ol><li>确认连接有线网络</li><li>使用<code>ip link</code>，查看有线网卡MAC地址</li><li>使用NetworkManager启用网卡Wake-On-Lan功能<br>a. 查找有线连接的名称</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">nmcli c show<br>---<br><br>NAME    UUID                                  TYPE            DEVICE<br>eth0    612e300a-c047-4adb-91e2-12ea7bfe214e  802-3-ethernet  enp0s25<br></code></pre></td></tr></table></figure><p>b. 查看连接对应的状态</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">nmcli c show <span class="hljs-string">&quot;eth0&quot;</span> | grep 802-3-ethernet.wake-on-lan<br>---<br><br>802-3-ethernet.wake-on-lan:             default<br>802-3-ethernet.wake-on-lan-password:    --<br></code></pre></td></tr></table></figure><p>显示为<code>default</code>或<code>-</code>，未启用<br>c. 配置Wake-On-Lan</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 启用</span><br>nmcli c modify <span class="hljs-string">&quot;eth0&quot;</span> 802-3-ethernet.wake-on-lan magic<br>nmcli c modify <span class="hljs-string">&quot;eth0&quot;</span> 802-3-ethernet.auto-negotiate <span class="hljs-built_in">yes</span><br><span class="hljs-comment"># 禁用</span><br>nmcli c modify <span class="hljs-string">&quot;eth0&quot;</span> 802-3-ethernet.wake-on-lan ignore<br></code></pre></td></tr></table></figure><p>d. 检查是否生效为magic</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">reboot<br>nmcli c show <span class="hljs-string">&quot;eth0&quot;</span> | grep 802-3-ethernet.wake-on-lan<br></code></pre></td></tr></table></figure><h1 id="Window启用WoL"><a href="#Window启用WoL" class="headerlink" title="Window启用WoL"></a>Window启用WoL</h1><ol><li>开始菜单查找电源管理，关闭快速启动。</li><li>设备管理器找到有线网卡，属性电源管理选中：允许此设备唤醒计算机、仅允许魔术包唤醒计算机。<br>高级选项打开<code>wake on lan</code>,<code>wake on magic packet</code></li></ol><h1 id="测试WoL"><a href="#测试WoL" class="headerlink" title="测试WoL"></a>测试WoL</h1><ol><li>关机</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> shutdown now<br><br><span class="hljs-built_in">sudo</span> systemctl <span class="hljs-built_in">suspend</span><br><br><span class="hljs-built_in">sudo</span> systemctl hibernate<br></code></pre></td></tr></table></figure><ol start="2"><li>安装远程唤醒工具<br>windows:</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">https://github.com/basildane/WakeOnLAN/releases/download/2.12.4/WakeOnLAN_2.12.4.0.exe<br></code></pre></td></tr></table></figure><p>linux:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> apt install wakeonlan<br></code></pre></td></tr></table></figure><ol><li>指定MAC地址，发送魔术数据包</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">wakeonlan <span class="hljs-string">&quot;e3:e3:1b:41:f5:fa&quot;</span><br><br>wakeonlan -i hostname 38:d5:47:79:ab:0b<br><br>wakeonlan -i 192.168.86.255 38:d5:47:79:ab:0b<br></code></pre></td></tr></table></figure><p>python:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> socket<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">wol</span>(<span class="hljs-params">mac_address: <span class="hljs-built_in">str</span></span>):<br>    <span class="hljs-comment"># mac_address = mac_address.replace(&#x27;:&#x27;, &#x27;&#x27;).replace(&#x27;-&#x27;, &#x27;&#x27;).lower()</span><br>    <span class="hljs-comment"># mac_address_bytes = b&#x27;&#x27;.join(bytes([int(mac_address[i:i+2], 16)]) for i in range(0, 12, 2))</span><br>    mac_address_bytes = <span class="hljs-built_in">bytes</span>.fromhex(mac_address.replace(<span class="hljs-string">&#x27;:&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>).replace(<span class="hljs-string">&#x27;-&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>).lower())<br>    magic_packet = <span class="hljs-string">b&#x27;\xFF&#x27;</span> * <span class="hljs-number">6</span> + mac_address_bytes * <span class="hljs-number">16</span><br>    sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)<br>    sock.setsockopt(socket.SOL_SOCKET, socket.SO_BROADCAST, <span class="hljs-number">1</span>)<br>    sock.sendto(magic_packet, (<span class="hljs-string">&#x27;255.255.255.255&#x27;</span>, <span class="hljs-number">7</span>))<br>    sock.close()<br><br>wol(<span class="hljs-string">&#x27;00:11:22:33:44:55&#x27;</span>)<br></code></pre></td></tr></table></figure><h1 id="检查魔术数据包的接收情况"><a href="#检查魔术数据包的接收情况" class="headerlink" title="检查魔术数据包的接收情况"></a>检查魔术数据包的接收情况</h1><p>为了确保 WoL 数据包到达目标计算机，可以监听 UDP 端口（通常是端口 9）以获取魔术数据包。预期的魔术数据包帧包含 6 字节的 FF，后跟目标计算机的 MAC 的 16 次重复（每次 6 字节），总共 102 字节。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> nc -u -l 9 | xxd<br><br><span class="hljs-built_in">sudo</span> tcpdump -i enp4s0 <span class="hljs-string">&#x27;(udp and port 7) or (udp and port 9)&#x27;</span><br></code></pre></td></tr></table></figure><h1 id="问题解决办法"><a href="#问题解决办法" class="headerlink" title="问题解决办法"></a>问题解决办法</h1><ol><li>如果无法开机检查BIOS中电源选项，DELL的BIOS中<code>BIOS &gt; Power Management &gt; Deep Sleep Control</code>需要禁用</li><li>笔记本出现电池耗电过快能是由启用的 WOL 引起，<code>ethtool -s net0 wol d</code>关闭</li></ol><h1 id="关机信息扩展"><a href="#关机信息扩展" class="headerlink" title="关机信息扩展"></a>关机信息扩展</h1><p>ACPI(Advanced Configuration and Power Interface)，即高级配置与电源接口。这种新的能源管理可以通过诸如软件控制”开关”系统，亦可以用Modem信号唤醒和关闭系统。<br>　　ACPI在运行中有以下几种模式：<br>　　S0 正常。<br>　　S1 CPU停止工作。唤醒时间：0秒。<br>　　S2 CPU关闭。唤醒时间：0.1秒。<br>　　S3 除了内存外的部件都停止工作。唤醒时间：0.5秒。<br>　　S4 内存信息写入硬盘，所有部件停止工作。唤醒时间：30秒。（休眠状态）<br>　　S5 关闭(Shutdown)。</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ol><li><a href="https://wiki.archlinux.org/title/Wake-on-LAN">Wake-on-LAN</a></li><li><a href="https://ivonblog.com/posts/linux-enable-wake-on-lan/">遠端開機：Ubuntu如何啟用Wake-On-Lan，透過NetworkManager設定</a></li><li><a href="https://blog.csdn.net/wh_19910525/article/details/51168488">电源选项中S1，S2，S3，S4，S5的含义</a></li><li><a href="https://learn.microsoft.com/zh-cn/windows-hardware/drivers/kernel/system-sleeping-states">系统睡眠状态</a></li><li><a href="https://www.dell.com/support/manuals/zh-hk/vostro-3670-desktop/vostro_3670_setup_and_specs/power-management-%E9%9B%BB%E6%BA%90%E7%AE%A1%E7%90%86-%E7%95%AB%E9%9D%A2%E9%81%B8%E9%A0%85?guid=guid-9cf1d258-4847-4c38-ae0b-9306bad21d7f&lang=zh-hk">DELL BIOS电源管理</a></li><li><a href="https://www.dell.com/support/kbdoc/zh-cn/000129137/%E4%BB%80%E4%B9%88%E6%98%AF-lan-%E5%94%A4%E9%86%92-%E6%95%85%E9%9A%9C%E5%A4%84%E7%90%86%E6%8C%87%E5%8D%97%E5%92%8C%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5">LAN 唤醒：故障处理指南和最佳实践</a></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>WoL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>WSL共享Windows字体</title>
    <link href="/2025/04/05/wsl-share-windows-font/"/>
    <url>/2025/04/05/wsl-share-windows-font/</url>
    
    <content type="html"><![CDATA[<h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><p>wsl是没有中文字体的，所以在安装使用Firefox等软件时，无法正常显示中文字体，所以我们可以通过使用Windows自带字体的方式，来实现快速安装中文字体（以Ubuntu为例）。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">增加字体查找路径</span><br>sudo vim /etc/fonts/local.conf<br></code></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span>?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">fontconfig</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;fonts.dtd&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">fontconfig</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dir</span>&gt;</span>/mnt/c/Windows/Fonts<span class="hljs-tag">&lt;/<span class="hljs-name">dir</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">fontconfig</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo apt install fontconfig<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">强制重建所有字体缓存文件</span><br>fc-cache -fv<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">查看安装字体</span><br>fc-list<br></code></pre></td></tr></table></figure><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ol><li><a href="https://x410.dev/cookbook/wsl/sharing-windows-fonts-with-wsl/">Sharing Windows fonts with WSL</a></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>wsl</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>zsh使用说明</title>
    <link href="/2025/04/05/zsh-usage/"/>
    <url>/2025/04/05/zsh-usage/</url>
    
    <content type="html"><![CDATA[<h1 id="安装zsh"><a href="#安装zsh" class="headerlink" title="安装zsh"></a>安装zsh</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo apt install zsh<br>zsh --version<br>sudo chsh -s $(which zsh)<br></code></pre></td></tr></table></figure><p><code>zsh</code>首次进入后，选择<code>1</code>初始化配置文件,安装oh-my-zsh会覆盖此配置。</p><h1 id="安装oh-my-zsh"><a href="#安装oh-my-zsh" class="headerlink" title="安装oh-my-zsh"></a>安装oh-my-zsh</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">sh -c &quot;$(curl -fsSL https://install.ohmyz.sh)&quot;<br>sh -c &quot;$(wget -O- https://install.ohmyz.sh)&quot;<br>sh -c &quot;$(fetch -o - https://install.ohmyz.sh)&quot;<br></code></pre></td></tr></table></figure><h1 id="安装powerlevel10k主题"><a href="#安装powerlevel10k主题" class="headerlink" title="安装powerlevel10k主题"></a>安装powerlevel10k主题</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">git clone --depth=1 https://github.com/romkatv/powerlevel10k.git &quot;$&#123;ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom&#125;/themes/powerlevel10k&quot;<br>git clone --depth=1 https://gitee.com/romkatv/powerlevel10k.git &quot;$&#123;ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom&#125;/themes/powerlevel10k&quot;<br><br>sed -i &#x27;s/^ZSH_THEME=.*/ZSH_THEME=&quot;powerlevel10k\/powerlevel10k&quot;/&#x27; ~/.zshrc<br></code></pre></td></tr></table></figure><p>修改zshrc,配置主题<code>ZSH_THEME=&quot;powerlevel10k/powerlevel10k&quot;</code></p><p>重新配置主题<code>p10k configure</code></p><h1 id="安装其他工具"><a href="#安装其他工具" class="headerlink" title="安装其他工具"></a>安装其他工具</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">zsh-autosuggestions自动提示插件</span><br>git clone https://github.com/zsh-users/zsh-autosuggestions $&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;/plugins/zsh-autosuggestions<br><span class="hljs-meta prompt_"># </span><span class="language-bash">zsh-syntax-highlighting语法高亮插件</span><br>git clone https://github.com/zsh-users/zsh-syntax-highlighting.git $&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;/plugins/zsh-syntax-highlighting<br><span class="hljs-meta prompt_"># </span><span class="language-bash">zsh-z目录切换跳转</span><br>git clone https://github.com/agkozak/zsh-z $ZSH_CUSTOM/plugins/zsh-z<br><br></code></pre></td></tr></table></figure><h1 id="安装字体"><a href="#安装字体" class="headerlink" title="安装字体"></a>安装字体</h1><ol><li>安装MesloLGS</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">下载字体</span><br>wget https://ghfast.top/https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Regular.ttf &amp;&amp;<br>wget https://ghfast.top/https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Bold.ttf  &amp;&amp;<br>wget https://ghfast.top/https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Italic.ttf  &amp;&amp;<br>wget https://ghfast.top/https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Bold%20Italic.ttf<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">安装字体</span><br>sudo mkdir /usr/share/fonts/truetype/MesloLGS<br>sudo mv *.ttf /usr/share/fonts/truetype/MesloLGS<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">安装fontconfig工具</span><br>sudo apt install fontconfig<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">刷新字体缓存</span><br>fc-cache -fv<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">测试字体显示</span><br>echo $&#x27;\uf115&#x27;  # 能打印出文件夹图标则成功<br></code></pre></td></tr></table></figure><ol start="2"><li>安装powerline字体</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo apt install fonts-powerline<br><br>sudo dnf install powerline-fonts<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-built_in">clone</span></span><br>git clone https://github.com/powerline/fonts.git --depth=1<br><span class="hljs-meta prompt_"># </span><span class="language-bash">install</span><br>cd fonts<br>./install.sh<br><span class="hljs-meta prompt_"># </span><span class="language-bash">clean-up a bit</span><br>cd ..<br>rm -rf fonts<br></code></pre></td></tr></table></figure><ol start="3"><li>字体下载网站</li></ol><ul><li><a href="https://github.com/ryanoasis/nerd-fonts">https://github.com/ryanoasis/nerd-fonts</a></li><li><a href="https://www.nerdfonts.com/font-downloads">https://www.nerdfonts.com/font-downloads</a></li></ul><h1 id="应用主题和插件"><a href="#应用主题和插件" class="headerlink" title="应用主题和插件"></a>应用主题和插件</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">编辑配置文件，修改主题和插件</span><br>vim ~/.zshrc<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">修改主题</span><br>ZSH_THEME=&quot;powerlevel10k/powerlevel10k&quot;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">启用插件</span><br>plugins=(<br>  git<br>  zsh-autosuggestions<br>  zsh-syntax-highlighting<br>  z<br>)<br></code></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li><a href="https://blog.lololowe.com/posts/dd02/">linux 终端美化</a></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>zsh</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Tmux使用说明</title>
    <link href="/2025/03/31/tmux-usage/"/>
    <url>/2025/03/31/tmux-usage/</url>
    
    <content type="html"><![CDATA[<h2 id="1-简介"><a href="#1-简介" class="headerlink" title="1. 简介"></a>1. 简介</h2><p>tmux(Terminal Multiplexer)多session管理的终端程序，保持进程在后端运行，它允许您在单个会话中创建、管理和组织多个终端窗口。</p><ol><li>会话持久化：连接断开后会话保持</li><li>多任务处理：多任务系统切换</li><li>分屏管理：一个终端中分隔屏幕，创建多个窗口</li></ol><h2 id="2-安装"><a href="#2-安装" class="headerlink" title="2. 安装"></a>2. 安装</h2><ol><li>发行版安装</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">For Ubuntu/Debian-based systems</span><br>sudo apt update<br>sudo apt install tmux<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">For CentOS/RHEL-based systems</span><br>sudo yum install tmux<br>sudo dnf -y install tmux<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">Verify installation</span><br>tmux -V<br></code></pre></td></tr></table></figure><ol start="2"><li><p>git安装</p></li><li><p>安装依赖</p></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">install Tmux dependencies on Debian</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">apt-get install libevent ncurses libevent-dev ncurses-dev build-essential bison pkg-config</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">install Tmux dependencies on RHEL/CentOS</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">yum install libevent ncurses libevent-devel ncurses-devel gcc make bison pkg-config</span><br></code></pre></td></tr></table></figure><ol start="2"><li>编译</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-built_in">clone</span> install</span><br>git clone https://github.com/tmux/tmux.git<br>cd tmux<br>sh autogen.sh<br>./configure &amp;&amp; make<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">download tmux and install without git cloning</span><br>wget https://github.com/tmux/tmux/releases/download/3.3a/tmux-3.3a.tar.gz<br>tar xzvf tmux-3.3a.tar.gz<br>cd tmux-3.3a<br>./configure<br>make &amp;&amp; sudo make install<br><br></code></pre></td></tr></table></figure><h2 id="3-常用命令"><a href="#3-常用命令" class="headerlink" title="3. 常用命令"></a>3. 常用命令</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">starting a New Session</span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">tmux</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">detaching from a Session</span><br>Ctrl+b, then d<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">reattaching to a Session</span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">tmux attach</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">creating a New Window</span><br>Ctrl+b, then c<br><span class="hljs-meta prompt_">  </span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">switching Between Windows</span><br>Ctrl+b, then n (for next window)<br>Ctrl+b, then p (for previous window)<br><br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">splitting Panes Horizontally</span><br>Ctrl+b, then \&quot;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">splitting Panes Vertically</span><br>Ctrl+b, then %<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">resizing Panes</span><br>Ctrl+b, then arrow keys<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">renaming a Session</span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">tmux rename-session -t [old-name] [new-name]</span><br><span class="hljs-meta prompt_">  </span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">list All Sessions</span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">tmux <span class="hljs-built_in">ls</span></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">killing a Session</span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">tmux kill-session -t [session-name]</span><br></code></pre></td></tr></table></figure><h2 id="4-快捷键"><a href="#4-快捷键" class="headerlink" title="4. 快捷键"></a>4. 快捷键</h2><table><thead><tr><th align="center">操作</th><th>描述</th></tr></thead><tbody><tr><td align="center"><code>CTRL</code>+<code>b</code> <code>&lt;command&gt;</code></td><td>发送 <code>&lt;command&gt;</code> 到 tmux</td></tr><tr><td align="center"></td><td><strong>常用命令</strong></td></tr><tr><td align="center"><code>CTRL</code>+<code>b</code> + <code>?</code></td><td>显示帮助信息 (<code>q</code>退出)</td></tr><tr><td align="center"><code>CTRL</code>+<code>b</code> + <code>:</code></td><td>输入 tmux 命令</td></tr><tr><td align="center"></td><td><strong>窗口命令</strong></td></tr><tr><td align="center"><code>CTRL</code>+<code>b</code> +  <code>c</code></td><td>创建新窗口</td></tr><tr><td align="center"><code>CTRL</code>+<code>b</code> +  <code>,</code></td><td>重命名窗口</td></tr><tr><td align="center"><code>CTRL</code>+<code>b</code> +  <code>&amp;</code></td><td>关闭窗口</td></tr><tr><td align="center"><code>CTRL</code>+<code>b</code> +  <code>p</code></td><td>切换上一个窗口</td></tr><tr><td align="center"><code>CTRL</code>+<code>b</code> + <code>n</code></td><td>切换下一个窗口</td></tr><tr><td align="center"><code>CTRL</code>+<code>b</code> + <code>w</code></td><td>显示所有窗口，方向键选择窗口</td></tr><tr><td align="center"><code>CTRL</code>+<code>b</code> +</td><td><strong>窗格(pane)命令</strong></td></tr><tr><td align="center"><code>CTRL</code>+<code>b</code> + <code>%</code>  <code>tmux split-window -v</code></td><td>垂直分隔 vertically</td></tr><tr><td align="center"><code>CTRL</code>+<code>b</code> + <code>&quot;</code>  <code>tmux split-window -h</code></td><td>水平分隔 horizontally</td></tr><tr><td align="center"><code>CTRL</code>+<code>b</code> + <code>z</code></td><td>放大缩小</td></tr><tr><td align="center"><code>CTRL</code>+<code>b</code> + →</td><td>切换到右侧</td></tr><tr><td align="center"><code>CTRL</code>+<code>b</code> + ←</td><td>切换到左侧</td></tr><tr><td align="center"><code>CTRL</code>+<code>b</code> + ↑</td><td>切换到上侧</td></tr><tr><td align="center"><code>CTRL</code>+<code>b</code> + ↓</td><td>切换到下侧</td></tr><tr><td align="center"><code>CTRL</code>+<code>b</code> + <code>!</code></td><td>转换panel到窗口</td></tr><tr><td align="center"><code>CTRL</code>+<code>b</code> + <code>x</code></td><td>关闭panel</td></tr><tr><td align="center"><code>CTRL</code>+<code>b</code> + <code>[</code></td><td>进入复制模式</td></tr><tr><td align="center"><code>CTRL</code>+<code>b</code> + <code>:setw -g mode-keys vi</code></td><td>使用vi快捷键</td></tr><tr><td align="center"></td><td><strong>会话命令</strong></td></tr><tr><td align="center"><code>d</code></td><td>退出会话</td></tr><tr><td align="center"></td><td><strong>其他</strong></td></tr><tr><td align="center"><code>tmux new</code></td><td>创建新会话</td></tr><tr><td align="center"><code>tmux new -s mysession</code></td><td>创建新会话mysession</td></tr><tr><td align="center"><code>tmux new-session -A -s mysession</code></td><td>创建或连接到会话</td></tr><tr><td align="center"><code>tmux kill-session -t mysession</code></td><td>终止会话</td></tr><tr><td align="center"><code>tmux kill-session -a</code></td><td>终止所有会话</td></tr><tr><td align="center"><code>tmux kill-session -a -t mysession</code></td><td>终止mysession外所有会话</td></tr><tr><td align="center"><code>tmux ls</code> <code>tmux list-sessions</code></td><td>列出所有会话</td></tr><tr><td align="center"><code>tmux a</code> <code>tmux attach-session</code></td><td>连接到最后一个会话</td></tr><tr><td align="center"><code>tmux a -t mysession</code></td><td>连接到mysession</td></tr><tr><td align="center"><code>tmux resize-pane -L 20</code></td><td>调整分隔线位置(LRDU)</td></tr></tbody></table><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li><a href="https://github.com/tmux/tmux">source</a></li><li><a href="https://tmuxcheatsheet.com/">tmuxcheatsheet</a></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>tmux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ansible使用说明</title>
    <link href="/2025/03/21/ansible-usage/"/>
    <url>/2025/03/21/ansible-usage/</url>
    
    <content type="html"><![CDATA[<h1 id="ansible安装"><a href="#ansible安装" class="headerlink" title="ansible安装"></a>ansible安装</h1><ol><li>使用pip安装ansible</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">python get-pip.py --user<br>python -m pip install --user ansible<br></code></pre></td></tr></table></figure><ol start="2"><li>检查ansible安装</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ansible --version<br></code></pre></td></tr></table></figure><h1 id="inventory"><a href="#inventory" class="headerlink" title="inventory"></a>inventory</h1><p>ansible默认使用&#x2F;etc&#x2F;ansible&#x2F;hosts作为inventory文件，也可以使用-i选项指定inventory文件<br>inventory文件格式：<br>ini格式：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs shell">[webservers]<br>webserver1.example.com<br>webserver2.example.com<br>webserver3.example.com<br>192.0.6.45<br><br>[databases]<br>database1.example.com<br>database2.example.com<br><br>[host]<br>host1 ansible_host=127.0.0.1 ansible_user=vagrant ansible_port=2222 ansible_ssh_private_key_file=./.vagrant/machines/host1/virtualbox/private_key<br><br>[remote]<br>remote_test<br><br>[remote:vars]<br>ansible_host=IP_ADDRESS_OF_VIRTUAL_MACHINE<br>ansible_user=USERNAME<br></code></pre></td></tr></table></figure><h1 id="inventery-vars"><a href="#inventery-vars" class="headerlink" title="inventery vars"></a>inventery vars</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">ansible_host=127.0.0.1<br>ansible_port=22<br>ansible_connection=ssh<br>ansible_user=xxx<br>ansible_ssh_user=xxx<br>ansible_ssh_pass=xxx<br></code></pre></td></tr></table></figure><h1 id="playbook"><a href="#playbook" class="headerlink" title="playbook"></a>playbook</h1><p>playbook格式：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Intro</span> <span class="hljs-string">to</span> <span class="hljs-string">Ansible</span> <span class="hljs-string">Playbooks</span><br>  <span class="hljs-attr">hosts:</span> <span class="hljs-string">all</span><br>  <span class="hljs-attr">tasks:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Copy</span> <span class="hljs-string">file</span> <span class="hljs-string">hosts</span> <span class="hljs-string">with</span> <span class="hljs-string">permissions</span><br>    <span class="hljs-attr">ansible.builtin.copy:</span><br>      <span class="hljs-attr">src:</span> <span class="hljs-string">./hosts</span><br>      <span class="hljs-attr">dest:</span> <span class="hljs-string">/tmp/hosts_backup</span><br>      <span class="hljs-attr">mode:</span> <span class="hljs-number">0644</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Add</span> <span class="hljs-string">the</span> <span class="hljs-string">user</span> <span class="hljs-string">test</span><br>    <span class="hljs-attr">ansible.builtin.user:</span><br>      <span class="hljs-attr">name:</span> <span class="hljs-string">test</span><br>    <span class="hljs-attr">become:</span> <span class="hljs-literal">yes</span><br>    <span class="hljs-attr">become_method:</span> <span class="hljs-string">sudo</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Upgrade</span> <span class="hljs-string">all</span> <span class="hljs-string">apt</span> <span class="hljs-string">packages</span><br>    <span class="hljs-attr">apt:</span><br>      <span class="hljs-attr">force_apt_get:</span> <span class="hljs-literal">yes</span><br>      <span class="hljs-attr">upgrade:</span> <span class="hljs-string">dist</span><br>    <span class="hljs-attr">become:</span> <span class="hljs-literal">yes</span><br></code></pre></td></tr></table></figure><h1 id="Ansible-常用命令"><a href="#Ansible-常用命令" class="headerlink" title="Ansible 常用命令"></a>Ansible 常用命令</h1><p>命令行执行，格式为<code>ansible [host-pattern] -m [module] -a &quot;[module options]&quot;</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs shell">ansible all -i localhost, --connection=local -m ping<br>ansible all -i hosts -m ping<br><br>ansible all -i hosts --limit host2 -a &quot;/bin/echo hello&quot;<br><span class="hljs-meta prompt_"># </span><span class="language-bash">指定ansible_user和ansible_password,执行模块</span><br>ansible all -i &#x27;127.0.0.1,&#x27; -m ping  --e &quot;ansible_user=xxx ansible_password=xxx&quot;<br><span class="hljs-meta prompt_"># </span><span class="language-bash">-K交互输入密码</span><br>ansible all -i &#x27;127.0.0.1,&#x27; -a &quot;hostname&quot;  -u xxx -b -K<br><span class="hljs-meta prompt_"># </span><span class="language-bash">获取os的运行时间</span><br>ansible all -i /path/to/inventory/file -m command -a uptime <br><span class="hljs-meta prompt_"># </span><span class="language-bash">远程创建文件</span><br>ansible all -m ansible.builtin.file -a &quot;dest=/srv/foo/b.txt mode=600 owner=xxx group=xxx&quot;<br><span class="hljs-meta prompt_"># </span><span class="language-bash">远程创建目录</span><br>ansible all -m ansible.builtin.file -a &quot;dest=/path/to/c mode=755 owner=xxx group=xxx state=directory&quot;<br><span class="hljs-meta prompt_"># </span><span class="language-bash">远程删除文件</span><br>ansible webservers -m ansible.builtin.file -a &quot;dest=/path/to/c state=absent&quot;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">指定任务开始执行</span><br>ansible-playbook playbook.yml --start-at-task=&quot;install packages&quot;<br><span class="hljs-meta prompt_"># </span><span class="language-bash">逐行执行</span><br>ansible-playbook playbook.yml --step<br><br></code></pre></td></tr></table></figure><h1 id="Ansible-环境变量常用"><a href="#Ansible-环境变量常用" class="headerlink" title="Ansible 环境变量常用"></a>Ansible 环境变量常用</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">hostkey 检查</span><br>export ANSIBLE_HOST_KEY_CHECKING=False<br><span class="hljs-meta prompt_"># </span><span class="language-bash">全局启用调试器</span><br>export ANSIBLE_ENABLE_TASK_DEBUGGER=True<br></code></pre></td></tr></table></figure><h1 id="Ansible-默认路径"><a href="#Ansible-默认路径" class="headerlink" title="Ansible 默认路径"></a>Ansible 默认路径</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">inventory</span><br>/etc/ansible/hosts<br></code></pre></td></tr></table></figure><h1 id="Ansible-debug"><a href="#Ansible-debug" class="headerlink" title="Ansible debug"></a>Ansible debug</h1><ol><li>–step 任务执行交互</li></ol><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs markdown">PLAY [Your play name] <span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><br>Perform task: TASK: Your task name (N)o/(y)es/(c)ontinue:<br></code></pre></td></tr></table></figure><ol start="2"><li>-vvv 显示详细日志<br><code>ansible-playbook playbook.yml -vvv</code></li><li>打印运行时的变量信息</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">dump</span> <span class="hljs-string">all</span><br>  <span class="hljs-attr">hosts:</span> <span class="hljs-string">all</span><br>  <span class="hljs-attr">tasks:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Print</span> <span class="hljs-string">some</span> <span class="hljs-string">debug</span> <span class="hljs-string">information</span><br>      <span class="hljs-attr">vars:</span><br>        <span class="hljs-attr">msg:</span> <span class="hljs-string">|</span><br><span class="hljs-string">          Module Variables (&quot;vars&quot;):</span><br><span class="hljs-string">          --------------------------------</span><br><span class="hljs-string">          &#123;&#123; vars | to_nice_json &#125;&#125;</span><br><span class="hljs-string">          ================================</span><br><span class="hljs-string"></span><br>          <span class="hljs-string">Environment</span> <span class="hljs-string">Variables</span> <span class="hljs-string">(&quot;environment&quot;):</span><br>          <span class="hljs-string">--------------------------------</span><br>          &#123;&#123; <span class="hljs-string">environment</span> <span class="hljs-string">|</span> <span class="hljs-string">to_nice_json</span> &#125;&#125;<br>          <span class="hljs-string">================================</span><br><br>          <span class="hljs-string">Group</span> <span class="hljs-string">Variables</span> <span class="hljs-string">(&quot;groups&quot;):</span><br>          <span class="hljs-string">--------------------------------</span><br>          &#123;&#123; <span class="hljs-string">groups</span> <span class="hljs-string">|</span> <span class="hljs-string">to_nice_json</span> &#125;&#125;<br>          <span class="hljs-string">================================</span><br><br>          <span class="hljs-string">Host</span> <span class="hljs-string">Variables</span> <span class="hljs-string">(&quot;hostvars&quot;):</span><br>          <span class="hljs-string">--------------------------------</span><br>          &#123;&#123; <span class="hljs-string">hostvars</span> <span class="hljs-string">|</span> <span class="hljs-string">to_nice_json</span> &#125;&#125;<br>          <span class="hljs-string">================================</span><br>      <span class="hljs-attr">debug:</span><br>        <span class="hljs-attr">msg:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; msg.split(&#x27;\n&#x27;) &#125;&#125;</span>&quot;</span><br>      <span class="hljs-attr">tags:</span> <span class="hljs-string">debug_info</span><br></code></pre></td></tr></table></figure><ol start="4"><li>ansible-lint 检查playbook</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">roles/rolename/tasks/main.yml:8: risky-file-permissions File permissions unset or incorrect<br></code></pre></td></tr></table></figure><ol start="5"><li><p>ansible-console 交互模式运行<br>运行命令<code>ansible-console -i hosts.yml</code>.<br>获取提示信息<code>help</code>, 获取模块说明<code>help shell</code>。<br>执行模块<code>shell touch /tmp/asd creates=/tmp/asd</code>.<br>切换运行主机<code>cd group</code>, 查看主机<code>command hostname</code>.<br>模块不存在，默认会使用ansible.builtin.shell模块，<code>echo blah</code>会用shell执行.<br>语法提示<code>&lt;tab&gt;</code>.</p></li><li><p>Ansible Debugger<br>任务失败时候进入python交互模式，可以执行命令。</p></li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Execute</span> <span class="hljs-string">a</span> <span class="hljs-string">command</span><br>  <span class="hljs-attr">ansible.builtin.command:</span> <span class="hljs-string">&quot;false&quot;</span><br>  <span class="hljs-attr">debugger:</span> <span class="hljs-string">on_failed</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">My</span> <span class="hljs-string">play</span><br>  <span class="hljs-attr">hosts:</span> <span class="hljs-string">all</span><br>  <span class="hljs-attr">debugger:</span> <span class="hljs-string">on_skipped</span><br>  <span class="hljs-attr">tasks:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Execute</span> <span class="hljs-string">a</span> <span class="hljs-string">command</span><br>      <span class="hljs-attr">ansible.builtin.command:</span> <span class="hljs-string">&quot;true&quot;</span><br>      <span class="hljs-attr">when:</span> <span class="hljs-literal">False</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">all</span><br>  <span class="hljs-attr">debugger:</span> <span class="hljs-string">on_failed</span><br>  <span class="hljs-attr">gather_facts:</span> <span class="hljs-literal">no</span><br>  <span class="hljs-attr">tasks:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">fail:</span><br></code></pre></td></tr></table></figure><p>debug中使用的命令</p><table><thead><tr><th>命令</th><th>缩写</th><th>说明</th></tr></thead><tbody><tr><td>print</td><td>p</td><td>打印变量</td></tr><tr><td>task.args[key] &#x3D; value</td><td></td><td>更新args</td></tr><tr><td>task_vars[key] &#x3D; value</td><td></td><td>更新task_vars，需要跟update_task一起用</td></tr><tr><td>update_task</td><td>u</td><td>重新创建任务</td></tr><tr><td>redo</td><td>r</td><td>重试任务</td></tr><tr><td>continue</td><td>c</td><td>继续执行</td></tr><tr><td>quit</td><td>q</td><td>退出debugger</td></tr></tbody></table><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs shell">p task<br>p task.args<br>p task_vars<br>p task_vars[&#x27;pkg_name&#x27;]<br>p host<br>p result._result<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">更新args</span><br>task.args[&#x27;name&#x27;] = &#x27;bash&#x27;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">更新vars,需要和update_task一起用</span><br>task_vars[&#x27;pkg_name&#x27;] = &#x27;bash<br>update_task<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">重试任务</span><br>redo <br><br><br></code></pre></td></tr></table></figure><ol start="7"><li>常用debug写法</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Print</span> <span class="hljs-string">a</span> <span class="hljs-string">message</span><br>  <span class="hljs-attr">debug:</span><br>    <span class="hljs-attr">msg:</span> <span class="hljs-string">&quot;Hello, Ansible&quot;</span><br><br><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Check</span> <span class="hljs-string">variable</span> <span class="hljs-string">value</span><br>  <span class="hljs-attr">debug:</span><br>    <span class="hljs-attr">var:</span> <span class="hljs-string">some_variable</span><br><br><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Debugging</span> <span class="hljs-string">Variables</span><br>  <span class="hljs-attr">hosts:</span> <span class="hljs-string">all</span><br>  <span class="hljs-attr">tasks:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Display</span> <span class="hljs-string">the</span> <span class="hljs-string">value</span> <span class="hljs-string">of</span> <span class="hljs-string">&#x27;my_variable&#x27;</span><br>      <span class="hljs-attr">debug:</span><br>        <span class="hljs-attr">msg:</span> <span class="hljs-string">&quot;The value of my_variable is <span class="hljs-template-variable">&#123;&#123; my_variable &#125;&#125;</span>&quot;</span><br><br></code></pre></td></tr></table></figure><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ol><li><a href="https://docs.ansible.com/ansible/latest/index.html">Ansible官方文档</a></li><li><a href="https://medium.com/@vinoji2005/day-20-debugging-ansible-playbooks-essential-techniques-35d1576847ffl">Debugging Ansible Playbooks</a></li><li><a href="https://docs.ansible.com/ansible/latest/user_guide/playbooks_debugger.html">Ansible Debugger</a></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>ansible</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>asdf使用说明</title>
    <link href="/2025/03/20/asdf-usage/"/>
    <url>/2025/03/20/asdf-usage/</url>
    
    <content type="html"><![CDATA[<h2 id="安装说明"><a href="#安装说明" class="headerlink" title="安装说明"></a>安装说明</h2><ol><li>安装依赖</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt install curl git<br></code></pre></td></tr></table></figure><ol start="2"><li><p>下载 asdf 核心<br> a. <a href="https://github.com/asdf-vm/asdf/releases">https://github.com/asdf-vm/asdf/releases</a><br> b. <code>go install github.com/asdf-vm/asdf/cmd/asdf@v0.16.0</code></p></li><li><p>安装 asdf<br>在 ~&#x2F;.bashrc 文件中加入以下内容：</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> PATH=<span class="hljs-string">&quot;<span class="hljs-variable">$&#123;ASDF_DATA_DIR:-<span class="hljs-variable">$HOME</span>/.asdf&#125;</span>/shims:<span class="hljs-variable">$PATH</span>&quot;</span><br>. &lt;(asdf completion bash)<br></code></pre></td></tr></table></figure><ol start="4"><li>为每一个你想要管理的工具&#x2F;运行环境安装插件</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt-get install dirmngr gpg curl gawk<br>asdf plugin add nodejs https://github.com/asdf-vm/asdf-nodejs.git<br><br></code></pre></td></tr></table></figure><ol start="5"><li>安装工具&#x2F;运行环境的一个版本</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">asdf install nodejs latest<br></code></pre></td></tr></table></figure><ol start="6"><li>通过 .tool-versions 配置文件设置全局和项目版本</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">asdf <span class="hljs-built_in">set</span> nodejs latest<br></code></pre></td></tr></table></figure><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># asdf plugin add &lt;tool&gt; &lt;git url&gt;</span><br><br>asdf plugin add nodejs https://github.com/asdf-vm/asdf-nodejs.git<br>asdf plugin add python https://github.com/asdf-community/asdf-python.git<br>asdf plugin add java https://github.com/asdf-community/asdf-java.git<br>asdf plugin add golang https://github.com/asdf-community/asdf-golang.git<br>asdf plugin add poetry https://github.com/asdf-community/asdf-poetry.git<br><br><span class="hljs-comment"># asdf list all &lt;tool&gt;</span><br>asdf list all nodejs<br><br><span class="hljs-comment"># asdf install &lt;tool&gt; latest</span><br>asdf install nodejs latest<br><br></code></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li><a href="https://github.com/asdf-vm/asdf">https://github.com/asdf-vm/asdf</a></li><li><a href="https://asdf-vm.com/guide/getting-started.html">https://asdf-vm.com/guide/getting-started.html</a></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>asdf</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Windows下nodejs安装</title>
    <link href="/2025/03/19/nodejs-install/"/>
    <url>/2025/03/19/nodejs-install/</url>
    
    <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>本文介绍windows下使用nvm安装nodejs</p><h2 id="nvm安装"><a href="#nvm安装" class="headerlink" title="nvm安装"></a>nvm安装</h2><ol><li>安装nvm，使用nvm安装稳定版的nodejs<br>进入<a href="https://github.com/coreybutler/nvm-windows/releases">nvm-windows发布页面</a>，选择nvm-setup.exe安装。<br><img src="/img/nodejs-install/nvm-windows-download.png"><br>安装完成后在终端输入nvm version，能查到版本号说明安装成功了<br><img src="/img/nodejs-install/nvm-version.png"></li></ol><p>常用命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">显示已经安装的列表，list 可简化为 <span class="hljs-built_in">ls</span></span><br>nvm list<br><span class="hljs-meta prompt_"># </span><span class="language-bash">显示远程可安装的列表，list 也可简化为 <span class="hljs-built_in">ls</span></span><br>nvm list available<br><span class="hljs-meta prompt_"># </span><span class="language-bash">卸载指定版本 node</span><br>nvm uninstall [version]<br><span class="hljs-meta prompt_"># </span><span class="language-bash">使用指定版本 node</span><br>nvm use [version]<br></code></pre></td></tr></table></figure><ol start="2"><li>配置nvm下载镜像<br>在 nvm 的安装路径下，找到 settings.txt，在后面加上这两行，设置国内淘宝镜像源：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">node_mirror: https://npmmirror.com/mirrors/node/<br>npm_mirror: https://npmmirror.com/mirrors/npm/<br></code></pre></td></tr></table></figure><p>命令行版</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">阿里云云镜像</span><br>nvm npm_mirror https://npmmirror.com/mirrors/npm/<br>nvm node_mirror https://npmmirror.com/mirrors/node/<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">腾讯云镜像</span><br>nvm npm_mirror http://mirrors.cloud.tencent.com/npm/<br>nvm node_mirror http://mirrors.cloud.tencent.com/nodejs-release/<br></code></pre></td></tr></table></figure><p><img src="/img/nodejs-install/nvm-settings.png"></p><h2 id="nodejs安装"><a href="#nodejs安装" class="headerlink" title="nodejs安装"></a>nodejs安装</h2><ol start="3"><li>nodejs安装<br>使用<code>nvm install xxx</code>安装lts版本的noejs</li></ol><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">nvm</span> install <span class="hljs-number">22</span><br><span class="hljs-attribute">nvm</span> list<br><span class="hljs-attribute">nvm</span> use <span class="hljs-number">22</span><br></code></pre></td></tr></table></figure><p><img src="/img/nodejs-install/node-version.png"></p><ol start="4"><li>修改 npm 默认镜像源</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm config set registry http://registry.npmmirror.com<br><span class="hljs-meta prompt_"># </span><span class="language-bash">检查</span><br>npm config get registry<br></code></pre></td></tr></table></figure><ol start="5"><li>其他</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">npm config <span class="hljs-built_in">set</span> cache <span class="hljs-string">&quot;%NVM_SYMLINK%\node_cache&quot;</span></span><br>npm config set cache &quot;D:\nvm\nodejs\node_cache&quot;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">npm config <span class="hljs-built_in">set</span> prefix <span class="hljs-string">&quot;%NVM_SYMLINK%\node_global&quot;</span></span><br>npm config set prefix &quot;D:\nvm\nodejs\node_global&quot;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">可编辑 .npmrc 配置文件</span><br>npm config edit<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">查看部分 .npmrc 配置信息</span><br>npm config ls<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>nodejs</category>
      
      <category>nvm</category>
      
    </categories>
    
    
    <tags>
      
      <tag>nodejs</tag>
      
      <tag>nvm</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>通过 docker-compose 部署 code-server</title>
    <link href="/2025/03/14/code-server-deploy/"/>
    <url>/2025/03/14/code-server-deploy/</url>
    
    <content type="html"><![CDATA[<p>code-server 是社区创作的 Web 版 VS Code，后端运行在服务器中，开发者基于浏览器运行 IDE。</p><h2 id="部署配置"><a href="#部署配置" class="headerlink" title="部署配置"></a>部署配置</h2><p>docker-compose </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">services:</span><br>  <span class="hljs-attr">code-server:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">codercom/code-server:latest</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">code-server</span><br>    <span class="hljs-attr">environment:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">TZ=Asia/Shanghai</span> <span class="hljs-comment">#时区</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">PASSWORD=PASSWORD</span> <span class="hljs-comment">#可选，改成你自己的密码 PASSWORD/HASHED_PASSWORD 至少要配置一个</span><br>        <span class="hljs-comment">#- HASHED_PASSWORD= #可选，非明文保存的密码，因为上面 Password 的密码会以配置文件形式保存在服务器内，所以 code-server 提供了一个非明文形式的密码。具体可以通过 echo -n &quot;password&quot; | npx argon2-cli -e 这个命令生成，这里就不细讲了</span><br>        <span class="hljs-comment">#- SUDO_PASSWORD=password #可选，如果用这里的密码会以 sudo 的方式登陆</span><br>        <span class="hljs-comment">#- SUDO_PASSWORD_HASH= #可选，同上</span><br>        <span class="hljs-comment">#- PROXY_DOMAIN=code-server.my.domain #可选，服务器绑定的域名</span><br>        <span class="hljs-comment">#- DEFAULT_WORKSPACE=/home/coder/project #可选，默认工作区</span><br>    <span class="hljs-attr">user:</span> <span class="hljs-number">1000</span><span class="hljs-string">:1000</span><br>    <span class="hljs-attr">volumes:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">./config:/config</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">./code-server:/home/coder/project</span><br>    <span class="hljs-attr">ports:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-number">8080</span><span class="hljs-string">:8080</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">unless-stopped</span><br></code></pre></td></tr></table></figure><p>启动命令 <code>docker-compose up -d</code></p><h2 id="安装-python3"><a href="#安装-python3" class="headerlink" title="安装 python3"></a>安装 python3</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> apt update<br><span class="hljs-built_in">sudo</span> apt install python3 python3-dev<br><br></code></pre></td></tr></table></figure><h2 id="安装-nodejs"><a href="#安装-nodejs" class="headerlink" title="安装 nodejs"></a>安装 nodejs</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -o- https://raw.kkgithub.com/nvm-sh/nvm/v0.40.2/install.sh | bash<br><span class="hljs-built_in">source</span> ~/.bashrc<br>nvm -v<br>nvm install --lts<br></code></pre></td></tr></table></figure><h2 id="安装-extension"><a href="#安装-extension" class="headerlink" title="安装 extension"></a>安装 extension</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">code-server --install-extension ms-python.python<br>code-server --install-extension mhutchie.git-graph<br></code></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>[1] <a href="https://blog.csdn.net/kirigirihitomi/article/details/132859159">通过docker-compose配置code-server</a><br>[2] <a href="https://docs.linuxserver.io/images/docker-code-server/#docker-compose-recommended-click-here-for-more-info">code-server配置参考</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>code-server</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Harbar 安装出错</title>
    <link href="/2025/03/13/harbor/"/>
    <url>/2025/03/13/harbor/</url>
    
    <content type="html"><![CDATA[<h2 id="Harbar-安装出错"><a href="#Harbar-安装出错" class="headerlink" title="Harbar 安装出错"></a>Harbar 安装出错</h2><p>harboar启动失败，安装Harbor version：v2.9.0</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">popen failure: Cannot allocate memory<br>initdb: error: The program <span class="hljs-string">&quot;postgres&quot;</span> is needed by initdb but was not found <span class="hljs-keyword">in</span> the<br></code></pre></td></tr></table></figure><p>问题原因是docker版本过低，解决办法是升级docker版本大于20.10.10后即可解决。</p><h1 id="问题原因"><a href="#问题原因" class="headerlink" title="问题原因"></a>问题原因</h1><p>最新的 glibc （2.33.9000，在 Fedora 35 rawhide 中）现在默认尝试使用 ‘clone3’。<br>为了实现向后兼容性，如果它看到 ENOSYS errno 将自动回退 “clone”。<br>任何其他 errno 都被视为致命的错误。<br>docker 安装的默认 seccomp 过滤器会导致 EPERM，因此这会中断 glibc 回退。因此程序无法生成线程和fork子进程。</p><h1 id="根本原因"><a href="#根本原因" class="headerlink" title="根本原因"></a>根本原因</h1><p>带有 libseccomp 的 Docker packages&#x2F;libs 中使用的较新的 syscall 被阻止。</p><h2 id="Secommp"><a href="#Secommp" class="headerlink" title="Secommp"></a>Secommp</h2><p>Secommp (SECure COMPuting) 是 Linux 内核 2.6.12 版本引入的安全模块，主要是用来限制某一进程可用的系统调用 (system call)。<br>它最初被用于 cpushare 这个项目，让人们可以出租自己空闲的 cpu cycle 来执行 untrusted code。<br>这个 feature 本身并不是一个沙盒 (sandbox)，它只是一种减少 Linux 内核暴露的机制，是构建一个安全的沙盒的重要组成部分。</p><h2 id="Docker-Secommp"><a href="#Docker-Secommp" class="headerlink" title="Docker Secommp"></a>Docker Secommp</h2><p>libseccomp 允许您为进程配置允许的系统调用。<br>Docker 为所有容器设置默认的 seccomp 配置文件，以便仅允许某些 syscall，而阻止其他所有内容（因此，libseccomp 或 docker 尚不知道的较新 syscall 将被阻止3）</p><p>docker每个容器默认都设置了一个seccomp profile，屏蔽掉了其中的44个系统调用。<br>docker会将seccomp传递给runc中的sepc.linux.seccomp。<br>可以通过—security-opt seccomp&#x3D;xxx来设置docker的seccomp策略，xxx为json格式的文件，其中定义了seccomp规则。<br>也可以通过–security-opt seccomp&#x3D;unconfined来关闭docker引入默认的seccomp规则的限制。</p><h1 id="Secommp-等导致的-operation-not-permitted-处理办法"><a href="#Secommp-等导致的-operation-not-permitted-处理办法" class="headerlink" title="Secommp 等导致的 operation not permitted 处理办法"></a>Secommp 等导致的 operation not permitted 处理办法</h1><ol><li>–security-opt seccomp&#x3D;unconfined来关闭docker引入默认的seccomp规则的限制</li><li>切换到较旧的映像， 如果 16 在移动到 Debian Bookworm 时开始失败，那么 16-bullseye 是一个有效的解决方法，直到主机可以更新为止。</li><li>更新主机docker版本</li></ol><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>[1] <a href="https://github.com/goharbor/harbor/issues/19141">DB init error: popen failure: Cannot allocate memory</a><br>[2] <a href="https://github.com/timescale/timescaledb-docker-ha/issues/260">Docker image fails during initdb </a><br>[3] <a href="https://github.com/moby/moby/pull/42681">seccomp: add support for “clone3” syscall in default policy</a><br>[4] <a href="https://github.com/moby/moby/issues/42680">seccomp filter breaks latest glibc (in fedora rawhide) by blocking clone3 with EPERM</a><br>[5] <a href="https://docs.docker.com/engine/security/seccomp/">Seccomp security profiles for Docker</a><br>[6] <a href="https://github.com/docker-library/official-images/issues/16829">operation not permitted, a libseccomp story </a><br>[7] <a href="https://github.com/docker-library/golang/issues/467">runtime&#x2F;cgo: pthread_create failed: Operation not permitted</a></p>]]></content>
    
    
    <categories>
      
      <category>docker</category>
      
    </categories>
    
    
    <tags>
      
      <tag>docker</tag>
      
      <tag>harbor</tag>
      
      <tag>secommp</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
