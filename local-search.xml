<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>zsh使用说明</title>
    <link href="/2025/04/05/zsh-usage/"/>
    <url>/2025/04/05/zsh-usage/</url>
    
    <content type="html"><![CDATA[<h1 id="安装zsh"><a href="#安装zsh" class="headerlink" title="安装zsh"></a>安装zsh</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo apt install zsh<br>zsh --version<br>sudo chsh -s $(which zsh)<br></code></pre></td></tr></table></figure><p><code>zsh</code>首次进入后，选择<code>1</code>初始化配置文件,安装oh-my-zsh会覆盖此配置。</p><h1 id="安装oh-my-zsh"><a href="#安装oh-my-zsh" class="headerlink" title="安装oh-my-zsh"></a>安装oh-my-zsh</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">sh -c &quot;$(curl -fsSL https://install.ohmyz.sh)&quot;<br>sh -c &quot;$(wget -O- https://install.ohmyz.sh)&quot;<br>sh -c &quot;$(fetch -o - https://install.ohmyz.sh)&quot;<br></code></pre></td></tr></table></figure><h1 id="安装powerlevel10k主题"><a href="#安装powerlevel10k主题" class="headerlink" title="安装powerlevel10k主题"></a>安装powerlevel10k主题</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">git clone --depth=1 https://github.com/romkatv/powerlevel10k.git &quot;$&#123;ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom&#125;/themes/powerlevel10k&quot;<br>git clone --depth=1 https://gitee.com/romkatv/powerlevel10k.git &quot;$&#123;ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom&#125;/themes/powerlevel10k&quot;<br><br>sed -i &#x27;s/^ZSH_THEME=.*/ZSH_THEME=&quot;powerlevel10k\/powerlevel10k&quot;/&#x27; ~/.zshrc<br></code></pre></td></tr></table></figure><p>修改zshrc,配置主题<code>ZSH_THEME=&quot;powerlevel10k/powerlevel10k&quot;</code></p><p>重新配置主题<code>p10k configure</code></p><h1 id="安装其他工具"><a href="#安装其他工具" class="headerlink" title="安装其他工具"></a>安装其他工具</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">powerlevel10k主题</span><br>git clone https://github.com/romkatv/powerlevel10k.git $ZSH_CUSTOM/themes/powerlevel10k<br><span class="hljs-meta prompt_"># </span><span class="language-bash">zsh-autosuggestions自动提示插件</span><br>git clone https://github.com/zsh-users/zsh-autosuggestions $&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;/plugins/zsh-autosuggestions<br><span class="hljs-meta prompt_"># </span><span class="language-bash">zsh-syntax-highlighting语法高亮插件</span><br>git clone https://github.com/zsh-users/zsh-syntax-highlighting.git $&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;/plugins/zsh-syntax-highlighting<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">下载失败可以尝试以下命令</span><br>git clone https://ghproxy.net/https://github.com/romkatv/powerlevel10k.git $ZSH_CUSTOM/themes/powerlevel10k<br>git clone https://ghproxy.net/https://github.com/zsh-users/zsh-autosuggestions $&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;/plugins/zsh-autosuggestions<br>git clone https://ghproxy.net/https://github.com/zsh-users/zsh-syntax-highlighting.git $&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;/plugins/zsh-syntax-highlighting<br></code></pre></td></tr></table></figure><h1 id="安装字体"><a href="#安装字体" class="headerlink" title="安装字体"></a>安装字体</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">下载字体</span><br>wget https://ghfast.top/https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Regular.ttf &amp;&amp;<br>wget https://ghfast.top/https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Bold.ttf  &amp;&amp;<br>wget https://ghfast.top/https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Italic.ttf  &amp;&amp;<br>wget https://ghfast.top/https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Bold%20Italic.ttf<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">安装字体</span><br>sudo mkdir /usr/share/fonts/truetype/MesloLGS<br>sudo mv *.ttf /usr/share/fonts/truetype/MesloLGS<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">安装fontconfig工具</span><br>sudo apt install fontconfig<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">刷新字体缓存</span><br>fc-cache -fv<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">测试字体显示</span><br>echo $&#x27;\uf115&#x27;  # 能打印出文件夹图标则成功<br></code></pre></td></tr></table></figure><h1 id="应用主题和插件"><a href="#应用主题和插件" class="headerlink" title="应用主题和插件"></a>应用主题和插件</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">编辑配置文件，修改主题和插件</span><br>vim ~/.zshrc<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">修改主题</span><br>ZSH_THEME=&quot;powerlevel10k/powerlevel10k&quot;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">启用插件</span><br>plugins=(<br>  git<br>  zsh-autosuggestions<br>  zsh-syntax-highlighting<br>)<br></code></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li><a href="https://blog.lololowe.com/posts/dd02/">linux 终端美化</a></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>zsh</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Tmux使用说明</title>
    <link href="/2025/03/31/tmux-usage/"/>
    <url>/2025/03/31/tmux-usage/</url>
    
    <content type="html"><![CDATA[<h2 id="1-简介"><a href="#1-简介" class="headerlink" title="1. 简介"></a>1. 简介</h2><p>tmux(Terminal Multiplexer)多session管理的终端程序，保持进程在后端运行，它允许您在单个会话中创建、管理和组织多个终端窗口。</p><ol><li>会话持久化：连接断开后会话保持</li><li>多任务处理：多任务系统切换</li><li>分屏管理：一个终端中分隔屏幕，创建多个窗口</li></ol><h2 id="2-安装"><a href="#2-安装" class="headerlink" title="2. 安装"></a>2. 安装</h2><ol><li>发行版安装</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">For Ubuntu/Debian-based systems</span><br>sudo apt update<br>sudo apt install tmux<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">For CentOS/RHEL-based systems</span><br>sudo yum install tmux<br>sudo dnf -y install tmux<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">Verify installation</span><br>tmux -V<br></code></pre></td></tr></table></figure><ol start="2"><li><p>git安装</p></li><li><p>安装依赖</p></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">install Tmux dependencies on Debian</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">apt-get install libevent ncurses libevent-dev ncurses-dev build-essential bison pkg-config</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">install Tmux dependencies on RHEL/CentOS</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">yum install libevent ncurses libevent-devel ncurses-devel gcc make bison pkg-config</span><br></code></pre></td></tr></table></figure><ol start="2"><li>编译</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-built_in">clone</span> install</span><br>git clone https://github.com/tmux/tmux.git<br>cd tmux<br>sh autogen.sh<br>./configure &amp;&amp; make<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">download tmux and install without git cloning</span><br>wget https://github.com/tmux/tmux/releases/download/3.3a/tmux-3.3a.tar.gz<br>tar xzvf tmux-3.3a.tar.gz<br>cd tmux-3.3a<br>./configure<br>make &amp;&amp; sudo make install<br><br></code></pre></td></tr></table></figure><h2 id="3-常用命令"><a href="#3-常用命令" class="headerlink" title="3. 常用命令"></a>3. 常用命令</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">starting a New Session</span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">tmux</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">detaching from a Session</span><br>Ctrl+b, then d<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">reattaching to a Session</span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">tmux attach</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">creating a New Window</span><br>Ctrl+b, then c<br><span class="hljs-meta prompt_">  </span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">switching Between Windows</span><br>Ctrl+b, then n (for next window)<br>Ctrl+b, then p (for previous window)<br><br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">splitting Panes Horizontally</span><br>Ctrl+b, then \&quot;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">splitting Panes Vertically</span><br>Ctrl+b, then %<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">resizing Panes</span><br>Ctrl+b, then arrow keys<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">renaming a Session</span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">tmux rename-session -t [old-name] [new-name]</span><br><span class="hljs-meta prompt_">  </span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">list All Sessions</span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">tmux <span class="hljs-built_in">ls</span></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">killing a Session</span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">tmux kill-session -t [session-name]</span><br></code></pre></td></tr></table></figure><h2 id="4-快捷键"><a href="#4-快捷键" class="headerlink" title="4. 快捷键"></a>4. 快捷键</h2><table><thead><tr><th align="center">操作</th><th>描述</th></tr></thead><tbody><tr><td align="center"><code>CTRL</code>+<code>b</code> <code>&lt;command&gt;</code></td><td>发送 <code>&lt;command&gt;</code> 到 tmux</td></tr><tr><td align="center"></td><td><strong>常用命令</strong></td></tr><tr><td align="center"><code>CTRL</code>+<code>b</code> + <code>?</code></td><td>显示帮助信息 (<code>q</code>退出)</td></tr><tr><td align="center"><code>CTRL</code>+<code>b</code> + <code>:</code></td><td>输入 tmux 命令</td></tr><tr><td align="center"></td><td><strong>窗口命令</strong></td></tr><tr><td align="center"><code>CTRL</code>+<code>b</code> +  <code>c</code></td><td>创建新窗口</td></tr><tr><td align="center"><code>CTRL</code>+<code>b</code> +  <code>,</code></td><td>重命名窗口</td></tr><tr><td align="center"><code>CTRL</code>+<code>b</code> +  <code>&amp;</code></td><td>关闭窗口</td></tr><tr><td align="center"><code>CTRL</code>+<code>b</code> +  <code>p</code></td><td>切换上一个窗口</td></tr><tr><td align="center"><code>CTRL</code>+<code>b</code> + <code>n</code></td><td>切换下一个窗口</td></tr><tr><td align="center"><code>CTRL</code>+<code>b</code> + <code>w</code></td><td>显示所有窗口，方向键选择窗口</td></tr><tr><td align="center"><code>CTRL</code>+<code>b</code> +</td><td><strong>窗格(pane)命令</strong></td></tr><tr><td align="center"><code>CTRL</code>+<code>b</code> + <code>%</code>  <code>tmux split-window -v</code></td><td>垂直分隔 vertically</td></tr><tr><td align="center"><code>CTRL</code>+<code>b</code> + <code>&quot;</code>  <code>tmux split-window -h</code></td><td>水平分隔 horizontally</td></tr><tr><td align="center"><code>CTRL</code>+<code>b</code> + <code>z</code></td><td>放大缩小</td></tr><tr><td align="center"><code>CTRL</code>+<code>b</code> + →</td><td>切换到右侧</td></tr><tr><td align="center"><code>CTRL</code>+<code>b</code> + ←</td><td>切换到左侧</td></tr><tr><td align="center"><code>CTRL</code>+<code>b</code> + ↑</td><td>切换到上侧</td></tr><tr><td align="center"><code>CTRL</code>+<code>b</code> + ↓</td><td>切换到下侧</td></tr><tr><td align="center"><code>CTRL</code>+<code>b</code> + <code>!</code></td><td>转换panel到窗口</td></tr><tr><td align="center"><code>CTRL</code>+<code>b</code> + <code>x</code></td><td>关闭panel</td></tr><tr><td align="center"><code>CTRL</code>+<code>b</code> + <code>[</code></td><td>进入复制模式</td></tr><tr><td align="center"><code>CTRL</code>+<code>b</code> + <code>:setw -g mode-keys vi</code></td><td>使用vi快捷键</td></tr><tr><td align="center"></td><td><strong>会话命令</strong></td></tr><tr><td align="center"><code>d</code></td><td>退出会话</td></tr><tr><td align="center"></td><td><strong>其他</strong></td></tr><tr><td align="center"><code>tmux new</code></td><td>创建新会话</td></tr><tr><td align="center"><code>tmux new -s mysession</code></td><td>创建新会话mysession</td></tr><tr><td align="center"><code>tmux new-session -A -s mysession</code></td><td>创建或连接到会话</td></tr><tr><td align="center"><code>tmux kill-session -t mysession</code></td><td>终止会话</td></tr><tr><td align="center"><code>tmux kill-session -a</code></td><td>终止所有会话</td></tr><tr><td align="center"><code>tmux kill-session -a -t mysession</code></td><td>终止mysession外所有会话</td></tr><tr><td align="center"><code>tmux ls</code> <code>tmux list-sessions</code></td><td>列出所有会话</td></tr><tr><td align="center"><code>tmux a</code> <code>tmux attach-session</code></td><td>连接到最后一个会话</td></tr><tr><td align="center"><code>tmux a -t mysession</code></td><td>连接到mysession</td></tr><tr><td align="center"><code>tmux resize-pane -L 20</code></td><td>调整分隔线位置(LRDU)</td></tr></tbody></table><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li><a href="https://github.com/tmux/tmux">source</a></li><li><a href="https://tmuxcheatsheet.com/">tmuxcheatsheet</a></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>tmux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ansible使用说明</title>
    <link href="/2025/03/21/ansible-usage/"/>
    <url>/2025/03/21/ansible-usage/</url>
    
    <content type="html"><![CDATA[<h1 id="ansible安装"><a href="#ansible安装" class="headerlink" title="ansible安装"></a>ansible安装</h1><ol><li>使用pip安装ansible</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">python get-pip.py --user<br>python -m pip install --user ansible<br></code></pre></td></tr></table></figure><ol start="2"><li>检查ansible安装</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ansible --version<br></code></pre></td></tr></table></figure><h1 id="inventory"><a href="#inventory" class="headerlink" title="inventory"></a>inventory</h1><p>ansible默认使用&#x2F;etc&#x2F;ansible&#x2F;hosts作为inventory文件，也可以使用-i选项指定inventory文件<br>inventory文件格式：<br>ini格式：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs shell">[webservers]<br>webserver1.example.com<br>webserver2.example.com<br>webserver3.example.com<br>192.0.6.45<br><br>[databases]<br>database1.example.com<br>database2.example.com<br><br>[host]<br>host1 ansible_host=127.0.0.1 ansible_user=vagrant ansible_port=2222 ansible_ssh_private_key_file=./.vagrant/machines/host1/virtualbox/private_key<br><br>[remote]<br>remote_test<br><br>[remote:vars]<br>ansible_host=IP_ADDRESS_OF_VIRTUAL_MACHINE<br>ansible_user=USERNAME<br></code></pre></td></tr></table></figure><h1 id="inventery-vars"><a href="#inventery-vars" class="headerlink" title="inventery vars"></a>inventery vars</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">ansible_host=127.0.0.1<br>ansible_port=22<br>ansible_connection=ssh<br>ansible_user=xxx<br>ansible_ssh_user=xxx<br>ansible_ssh_pass=xxx<br></code></pre></td></tr></table></figure><h1 id="playbook"><a href="#playbook" class="headerlink" title="playbook"></a>playbook</h1><p>playbook格式：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Intro</span> <span class="hljs-string">to</span> <span class="hljs-string">Ansible</span> <span class="hljs-string">Playbooks</span><br>  <span class="hljs-attr">hosts:</span> <span class="hljs-string">all</span><br>  <span class="hljs-attr">tasks:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Copy</span> <span class="hljs-string">file</span> <span class="hljs-string">hosts</span> <span class="hljs-string">with</span> <span class="hljs-string">permissions</span><br>    <span class="hljs-attr">ansible.builtin.copy:</span><br>      <span class="hljs-attr">src:</span> <span class="hljs-string">./hosts</span><br>      <span class="hljs-attr">dest:</span> <span class="hljs-string">/tmp/hosts_backup</span><br>      <span class="hljs-attr">mode:</span> <span class="hljs-number">0644</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Add</span> <span class="hljs-string">the</span> <span class="hljs-string">user</span> <span class="hljs-string">test</span><br>    <span class="hljs-attr">ansible.builtin.user:</span><br>      <span class="hljs-attr">name:</span> <span class="hljs-string">test</span><br>    <span class="hljs-attr">become:</span> <span class="hljs-literal">yes</span><br>    <span class="hljs-attr">become_method:</span> <span class="hljs-string">sudo</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Upgrade</span> <span class="hljs-string">all</span> <span class="hljs-string">apt</span> <span class="hljs-string">packages</span><br>    <span class="hljs-attr">apt:</span><br>      <span class="hljs-attr">force_apt_get:</span> <span class="hljs-literal">yes</span><br>      <span class="hljs-attr">upgrade:</span> <span class="hljs-string">dist</span><br>    <span class="hljs-attr">become:</span> <span class="hljs-literal">yes</span><br></code></pre></td></tr></table></figure><h1 id="Ansible-常用命令"><a href="#Ansible-常用命令" class="headerlink" title="Ansible 常用命令"></a>Ansible 常用命令</h1><p>命令行执行，格式为<code>ansible [host-pattern] -m [module] -a &quot;[module options]&quot;</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs shell">ansible all -i localhost, --connection=local -m ping<br>ansible all -i hosts -m ping<br><br>ansible all -i hosts --limit host2 -a &quot;/bin/echo hello&quot;<br><span class="hljs-meta prompt_"># </span><span class="language-bash">指定ansible_user和ansible_password,执行模块</span><br>ansible all -i &#x27;127.0.0.1,&#x27; -m ping  --e &quot;ansible_user=xxx ansible_password=xxx&quot;<br><span class="hljs-meta prompt_"># </span><span class="language-bash">-K交互输入密码</span><br>ansible all -i &#x27;127.0.0.1,&#x27; -a &quot;hostname&quot;  -u xxx -b -K<br><span class="hljs-meta prompt_"># </span><span class="language-bash">获取os的运行时间</span><br>ansible all -i /path/to/inventory/file -m command -a uptime <br><span class="hljs-meta prompt_"># </span><span class="language-bash">远程创建文件</span><br>ansible all -m ansible.builtin.file -a &quot;dest=/srv/foo/b.txt mode=600 owner=xxx group=xxx&quot;<br><span class="hljs-meta prompt_"># </span><span class="language-bash">远程创建目录</span><br>ansible all -m ansible.builtin.file -a &quot;dest=/path/to/c mode=755 owner=xxx group=xxx state=directory&quot;<br><span class="hljs-meta prompt_"># </span><span class="language-bash">远程删除文件</span><br>ansible webservers -m ansible.builtin.file -a &quot;dest=/path/to/c state=absent&quot;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">指定任务开始执行</span><br>ansible-playbook playbook.yml --start-at-task=&quot;install packages&quot;<br><span class="hljs-meta prompt_"># </span><span class="language-bash">逐行执行</span><br>ansible-playbook playbook.yml --step<br><br></code></pre></td></tr></table></figure><h1 id="Ansible-环境变量常用"><a href="#Ansible-环境变量常用" class="headerlink" title="Ansible 环境变量常用"></a>Ansible 环境变量常用</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">hostkey 检查</span><br>export ANSIBLE_HOST_KEY_CHECKING=False<br><span class="hljs-meta prompt_"># </span><span class="language-bash">全局启用调试器</span><br>export ANSIBLE_ENABLE_TASK_DEBUGGER=True<br></code></pre></td></tr></table></figure><h1 id="Ansible-默认路径"><a href="#Ansible-默认路径" class="headerlink" title="Ansible 默认路径"></a>Ansible 默认路径</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">inventory</span><br>/etc/ansible/hosts<br></code></pre></td></tr></table></figure><h1 id="Ansible-debug"><a href="#Ansible-debug" class="headerlink" title="Ansible debug"></a>Ansible debug</h1><ol><li>–step 任务执行交互</li></ol><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs markdown">PLAY [Your play name] <span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><br>Perform task: TASK: Your task name (N)o/(y)es/(c)ontinue:<br></code></pre></td></tr></table></figure><ol start="2"><li>-vvv 显示详细日志<br><code>ansible-playbook playbook.yml -vvv</code></li><li>打印运行时的变量信息</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">dump</span> <span class="hljs-string">all</span><br>  <span class="hljs-attr">hosts:</span> <span class="hljs-string">all</span><br>  <span class="hljs-attr">tasks:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Print</span> <span class="hljs-string">some</span> <span class="hljs-string">debug</span> <span class="hljs-string">information</span><br>      <span class="hljs-attr">vars:</span><br>        <span class="hljs-attr">msg:</span> <span class="hljs-string">|</span><br><span class="hljs-string">          Module Variables (&quot;vars&quot;):</span><br><span class="hljs-string">          --------------------------------</span><br><span class="hljs-string">          &#123;&#123; vars | to_nice_json &#125;&#125;</span><br><span class="hljs-string">          ================================</span><br><span class="hljs-string"></span><br>          <span class="hljs-string">Environment</span> <span class="hljs-string">Variables</span> <span class="hljs-string">(&quot;environment&quot;):</span><br>          <span class="hljs-string">--------------------------------</span><br>          &#123;&#123; <span class="hljs-string">environment</span> <span class="hljs-string">|</span> <span class="hljs-string">to_nice_json</span> &#125;&#125;<br>          <span class="hljs-string">================================</span><br><br>          <span class="hljs-string">Group</span> <span class="hljs-string">Variables</span> <span class="hljs-string">(&quot;groups&quot;):</span><br>          <span class="hljs-string">--------------------------------</span><br>          &#123;&#123; <span class="hljs-string">groups</span> <span class="hljs-string">|</span> <span class="hljs-string">to_nice_json</span> &#125;&#125;<br>          <span class="hljs-string">================================</span><br><br>          <span class="hljs-string">Host</span> <span class="hljs-string">Variables</span> <span class="hljs-string">(&quot;hostvars&quot;):</span><br>          <span class="hljs-string">--------------------------------</span><br>          &#123;&#123; <span class="hljs-string">hostvars</span> <span class="hljs-string">|</span> <span class="hljs-string">to_nice_json</span> &#125;&#125;<br>          <span class="hljs-string">================================</span><br>      <span class="hljs-attr">debug:</span><br>        <span class="hljs-attr">msg:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; msg.split(&#x27;\n&#x27;) &#125;&#125;</span>&quot;</span><br>      <span class="hljs-attr">tags:</span> <span class="hljs-string">debug_info</span><br></code></pre></td></tr></table></figure><ol start="4"><li>ansible-lint 检查playbook</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">roles/rolename/tasks/main.yml:8: risky-file-permissions File permissions unset or incorrect<br></code></pre></td></tr></table></figure><ol start="5"><li><p>ansible-console 交互模式运行<br>运行命令<code>ansible-console -i hosts.yml</code>.<br>获取提示信息<code>help</code>, 获取模块说明<code>help shell</code>。<br>执行模块<code>shell touch /tmp/asd creates=/tmp/asd</code>.<br>切换运行主机<code>cd group</code>, 查看主机<code>command hostname</code>.<br>模块不存在，默认会使用ansible.builtin.shell模块，<code>echo blah</code>会用shell执行.<br>语法提示<code>&lt;tab&gt;</code>.</p></li><li><p>Ansible Debugger<br>任务失败时候进入python交互模式，可以执行命令。</p></li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Execute</span> <span class="hljs-string">a</span> <span class="hljs-string">command</span><br>  <span class="hljs-attr">ansible.builtin.command:</span> <span class="hljs-string">&quot;false&quot;</span><br>  <span class="hljs-attr">debugger:</span> <span class="hljs-string">on_failed</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">My</span> <span class="hljs-string">play</span><br>  <span class="hljs-attr">hosts:</span> <span class="hljs-string">all</span><br>  <span class="hljs-attr">debugger:</span> <span class="hljs-string">on_skipped</span><br>  <span class="hljs-attr">tasks:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Execute</span> <span class="hljs-string">a</span> <span class="hljs-string">command</span><br>      <span class="hljs-attr">ansible.builtin.command:</span> <span class="hljs-string">&quot;true&quot;</span><br>      <span class="hljs-attr">when:</span> <span class="hljs-literal">False</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">all</span><br>  <span class="hljs-attr">debugger:</span> <span class="hljs-string">on_failed</span><br>  <span class="hljs-attr">gather_facts:</span> <span class="hljs-literal">no</span><br>  <span class="hljs-attr">tasks:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">fail:</span><br></code></pre></td></tr></table></figure><p>debug中使用的命令</p><table><thead><tr><th>命令</th><th>缩写</th><th>说明</th></tr></thead><tbody><tr><td>print</td><td>p</td><td>打印变量</td></tr><tr><td>task.args[key] &#x3D; value</td><td></td><td>更新args</td></tr><tr><td>task_vars[key] &#x3D; value</td><td></td><td>更新task_vars，需要跟update_task一起用</td></tr><tr><td>update_task</td><td>u</td><td>重新创建任务</td></tr><tr><td>redo</td><td>r</td><td>重试任务</td></tr><tr><td>continue</td><td>c</td><td>继续执行</td></tr><tr><td>quit</td><td>q</td><td>退出debugger</td></tr></tbody></table><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs shell">p task<br>p task.args<br>p task_vars<br>p task_vars[&#x27;pkg_name&#x27;]<br>p host<br>p result._result<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">更新args</span><br>task.args[&#x27;name&#x27;] = &#x27;bash&#x27;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">更新vars,需要和update_task一起用</span><br>task_vars[&#x27;pkg_name&#x27;] = &#x27;bash<br>update_task<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">重试任务</span><br>redo <br><br><br></code></pre></td></tr></table></figure><ol start="7"><li>常用debug写法</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Print</span> <span class="hljs-string">a</span> <span class="hljs-string">message</span><br>  <span class="hljs-attr">debug:</span><br>    <span class="hljs-attr">msg:</span> <span class="hljs-string">&quot;Hello, Ansible&quot;</span><br><br><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Check</span> <span class="hljs-string">variable</span> <span class="hljs-string">value</span><br>  <span class="hljs-attr">debug:</span><br>    <span class="hljs-attr">var:</span> <span class="hljs-string">some_variable</span><br><br><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Debugging</span> <span class="hljs-string">Variables</span><br>  <span class="hljs-attr">hosts:</span> <span class="hljs-string">all</span><br>  <span class="hljs-attr">tasks:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Display</span> <span class="hljs-string">the</span> <span class="hljs-string">value</span> <span class="hljs-string">of</span> <span class="hljs-string">&#x27;my_variable&#x27;</span><br>      <span class="hljs-attr">debug:</span><br>        <span class="hljs-attr">msg:</span> <span class="hljs-string">&quot;The value of my_variable is <span class="hljs-template-variable">&#123;&#123; my_variable &#125;&#125;</span>&quot;</span><br><br></code></pre></td></tr></table></figure><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ol><li><a href="https://docs.ansible.com/ansible/latest/index.html">Ansible官方文档</a></li><li><a href="https://medium.com/@vinoji2005/day-20-debugging-ansible-playbooks-essential-techniques-35d1576847ffl">Debugging Ansible Playbooks</a></li><li><a href="https://docs.ansible.com/ansible/latest/user_guide/playbooks_debugger.html">Ansible Debugger</a></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>ansible</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>asdf使用说明</title>
    <link href="/2025/03/20/asdf-usage/"/>
    <url>/2025/03/20/asdf-usage/</url>
    
    <content type="html"><![CDATA[<h2 id="安装说明"><a href="#安装说明" class="headerlink" title="安装说明"></a>安装说明</h2><ol><li>安装依赖</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt install curl git<br></code></pre></td></tr></table></figure><ol start="2"><li><p>下载 asdf 核心<br> a. <a href="https://github.com/asdf-vm/asdf/releases">https://github.com/asdf-vm/asdf/releases</a><br> b. <code>go install github.com/asdf-vm/asdf/cmd/asdf@v0.16.0</code></p></li><li><p>安装 asdf<br>在 ~&#x2F;.bashrc 文件中加入以下内容：</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> PATH=<span class="hljs-string">&quot;<span class="hljs-variable">$&#123;ASDF_DATA_DIR:-<span class="hljs-variable">$HOME</span>/.asdf&#125;</span>/shims:<span class="hljs-variable">$PATH</span>&quot;</span><br>. &lt;(asdf completion bash)<br></code></pre></td></tr></table></figure><ol start="4"><li>为每一个你想要管理的工具&#x2F;运行环境安装插件</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt-get install dirmngr gpg curl gawk<br>asdf plugin add nodejs https://github.com/asdf-vm/asdf-nodejs.git<br><br></code></pre></td></tr></table></figure><ol start="5"><li>安装工具&#x2F;运行环境的一个版本</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">asdf install nodejs latest<br></code></pre></td></tr></table></figure><ol start="6"><li>通过 .tool-versions 配置文件设置全局和项目版本</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">asdf <span class="hljs-built_in">set</span> nodejs latest<br></code></pre></td></tr></table></figure><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># asdf plugin add &lt;tool&gt; &lt;git url&gt;</span><br><br>asdf plugin add nodejs https://github.com/asdf-vm/asdf-nodejs.git<br>asdf plugin add python https://github.com/asdf-community/asdf-python.git<br>asdf plugin add java https://github.com/asdf-community/asdf-java.git<br>asdf plugin add golang https://github.com/asdf-community/asdf-golang.git<br>asdf plugin add poetry https://github.com/asdf-community/asdf-poetry.git<br><br><span class="hljs-comment"># asdf list all &lt;tool&gt;</span><br>asdf list all nodejs<br><br><span class="hljs-comment"># asdf install &lt;tool&gt; latest</span><br>asdf install nodejs latest<br><br></code></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li><a href="https://github.com/asdf-vm/asdf">https://github.com/asdf-vm/asdf</a></li><li><a href="https://asdf-vm.com/guide/getting-started.html">https://asdf-vm.com/guide/getting-started.html</a></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>asdf</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Windows下nodejs安装</title>
    <link href="/2025/03/19/nodejs-install/"/>
    <url>/2025/03/19/nodejs-install/</url>
    
    <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>本文介绍windows下使用nvm安装nodejs</p><h2 id="nvm安装"><a href="#nvm安装" class="headerlink" title="nvm安装"></a>nvm安装</h2><ol><li>安装nvm，使用nvm安装稳定版的nodejs<br>进入<a href="https://github.com/coreybutler/nvm-windows/releases">nvm-windows发布页面</a>，选择nvm-setup.exe安装。<br><img src="/img/nodejs-install/nvm-windows-download.png"><br>安装完成后在终端输入nvm version，能查到版本号说明安装成功了<br><img src="/img/nodejs-install/nvm-version.png"></li></ol><p>常用命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">显示已经安装的列表，list 可简化为 <span class="hljs-built_in">ls</span></span><br>nvm list<br><span class="hljs-meta prompt_"># </span><span class="language-bash">显示远程可安装的列表，list 也可简化为 <span class="hljs-built_in">ls</span></span><br>nvm list available<br><span class="hljs-meta prompt_"># </span><span class="language-bash">卸载指定版本 node</span><br>nvm uninstall [version]<br><span class="hljs-meta prompt_"># </span><span class="language-bash">使用指定版本 node</span><br>nvm use [version]<br></code></pre></td></tr></table></figure><ol start="2"><li>配置nvm下载镜像<br>在 nvm 的安装路径下，找到 settings.txt，在后面加上这两行，设置国内淘宝镜像源：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">node_mirror: https://npmmirror.com/mirrors/node/<br>npm_mirror: https://npmmirror.com/mirrors/npm/<br></code></pre></td></tr></table></figure><p>命令行版</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">阿里云云镜像</span><br>nvm npm_mirror https://npmmirror.com/mirrors/npm/<br>nvm node_mirror https://npmmirror.com/mirrors/node/<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">腾讯云镜像</span><br>nvm npm_mirror http://mirrors.cloud.tencent.com/npm/<br>nvm node_mirror http://mirrors.cloud.tencent.com/nodejs-release/<br></code></pre></td></tr></table></figure><p><img src="/img/nodejs-install/nvm-settings.png"></p><h2 id="nodejs安装"><a href="#nodejs安装" class="headerlink" title="nodejs安装"></a>nodejs安装</h2><ol start="3"><li>nodejs安装<br>使用<code>nvm install xxx</code>安装lts版本的noejs</li></ol><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">nvm</span> install <span class="hljs-number">22</span><br><span class="hljs-attribute">nvm</span> list<br><span class="hljs-attribute">nvm</span> use <span class="hljs-number">22</span><br></code></pre></td></tr></table></figure><p><img src="/img/nodejs-install/node-version.png"></p><ol start="4"><li>修改 npm 默认镜像源</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm config set registry http://registry.npmmirror.com<br><span class="hljs-meta prompt_"># </span><span class="language-bash">检查</span><br>npm config get registry<br></code></pre></td></tr></table></figure><ol start="5"><li>其他</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">npm config <span class="hljs-built_in">set</span> cache <span class="hljs-string">&quot;%NVM_SYMLINK%\node_cache&quot;</span></span><br>npm config set cache &quot;D:\nvm\nodejs\node_cache&quot;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">npm config <span class="hljs-built_in">set</span> prefix <span class="hljs-string">&quot;%NVM_SYMLINK%\node_global&quot;</span></span><br>npm config set prefix &quot;D:\nvm\nodejs\node_global&quot;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">可编辑 .npmrc 配置文件</span><br>npm config edit<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">查看部分 .npmrc 配置信息</span><br>npm config ls<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>nodejs</category>
      
      <category>nvm</category>
      
    </categories>
    
    
    <tags>
      
      <tag>nodejs</tag>
      
      <tag>nvm</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>通过 docker-compose 部署 code-server</title>
    <link href="/2025/03/14/code-server-deploy/"/>
    <url>/2025/03/14/code-server-deploy/</url>
    
    <content type="html"><![CDATA[<p>code-server 是社区创作的 Web 版 VS Code，后端运行在服务器中，开发者基于浏览器运行 IDE。</p><h2 id="部署配置"><a href="#部署配置" class="headerlink" title="部署配置"></a>部署配置</h2><p>docker-compose </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">services:</span><br>  <span class="hljs-attr">code-server:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">codercom/code-server:latest</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">code-server</span><br>    <span class="hljs-attr">environment:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">TZ=Asia/Shanghai</span> <span class="hljs-comment">#时区</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">PASSWORD=PASSWORD</span> <span class="hljs-comment">#可选，改成你自己的密码 PASSWORD/HASHED_PASSWORD 至少要配置一个</span><br>        <span class="hljs-comment">#- HASHED_PASSWORD= #可选，非明文保存的密码，因为上面 Password 的密码会以配置文件形式保存在服务器内，所以 code-server 提供了一个非明文形式的密码。具体可以通过 echo -n &quot;password&quot; | npx argon2-cli -e 这个命令生成，这里就不细讲了</span><br>        <span class="hljs-comment">#- SUDO_PASSWORD=password #可选，如果用这里的密码会以 sudo 的方式登陆</span><br>        <span class="hljs-comment">#- SUDO_PASSWORD_HASH= #可选，同上</span><br>        <span class="hljs-comment">#- PROXY_DOMAIN=code-server.my.domain #可选，服务器绑定的域名</span><br>        <span class="hljs-comment">#- DEFAULT_WORKSPACE=/home/coder/project #可选，默认工作区</span><br>    <span class="hljs-attr">user:</span> <span class="hljs-number">1000</span><span class="hljs-string">:1000</span><br>    <span class="hljs-attr">volumes:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">./config:/config</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">./code-server:/home/coder/project</span><br>    <span class="hljs-attr">ports:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-number">8080</span><span class="hljs-string">:8080</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">unless-stopped</span><br></code></pre></td></tr></table></figure><p>启动命令 <code>docker-compose up -d</code></p><h2 id="安装-python3"><a href="#安装-python3" class="headerlink" title="安装 python3"></a>安装 python3</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> apt update<br><span class="hljs-built_in">sudo</span> apt install python3 python3-dev<br><br></code></pre></td></tr></table></figure><h2 id="安装-nodejs"><a href="#安装-nodejs" class="headerlink" title="安装 nodejs"></a>安装 nodejs</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -o- https://raw.kkgithub.com/nvm-sh/nvm/v0.40.2/install.sh | bash<br><span class="hljs-built_in">source</span> ~/.bashrc<br>nvm -v<br>nvm install --lts<br></code></pre></td></tr></table></figure><h2 id="安装-extension"><a href="#安装-extension" class="headerlink" title="安装 extension"></a>安装 extension</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">code-server --install-extension ms-python.python<br>code-server --install-extension mhutchie.git-graph<br></code></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>[1] <a href="https://blog.csdn.net/kirigirihitomi/article/details/132859159">通过docker-compose配置code-server</a><br>[2] <a href="https://docs.linuxserver.io/images/docker-code-server/#docker-compose-recommended-click-here-for-more-info">code-server配置参考</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>code-server</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Harbar 安装出错</title>
    <link href="/2025/03/13/harbor/"/>
    <url>/2025/03/13/harbor/</url>
    
    <content type="html"><![CDATA[<h2 id="Harbar-安装出错"><a href="#Harbar-安装出错" class="headerlink" title="Harbar 安装出错"></a>Harbar 安装出错</h2><p>harboar启动失败，安装Harbor version：v2.9.0</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">popen failure: Cannot allocate memory<br>initdb: error: The program <span class="hljs-string">&quot;postgres&quot;</span> is needed by initdb but was not found <span class="hljs-keyword">in</span> the<br></code></pre></td></tr></table></figure><p>问题原因是docker版本过低，解决办法是升级docker版本大于20.10.10后即可解决。</p><h1 id="问题原因"><a href="#问题原因" class="headerlink" title="问题原因"></a>问题原因</h1><p>最新的 glibc （2.33.9000，在 Fedora 35 rawhide 中）现在默认尝试使用 ‘clone3’。<br>为了实现向后兼容性，如果它看到 ENOSYS errno 将自动回退 “clone”。<br>任何其他 errno 都被视为致命的错误。<br>docker 安装的默认 seccomp 过滤器会导致 EPERM，因此这会中断 glibc 回退。因此程序无法生成线程和fork子进程。</p><h1 id="根本原因"><a href="#根本原因" class="headerlink" title="根本原因"></a>根本原因</h1><p>带有 libseccomp 的 Docker packages&#x2F;libs 中使用的较新的 syscall 被阻止。</p><h2 id="Secommp"><a href="#Secommp" class="headerlink" title="Secommp"></a>Secommp</h2><p>Secommp (SECure COMPuting) 是 Linux 内核 2.6.12 版本引入的安全模块，主要是用来限制某一进程可用的系统调用 (system call)。<br>它最初被用于 cpushare 这个项目，让人们可以出租自己空闲的 cpu cycle 来执行 untrusted code。<br>这个 feature 本身并不是一个沙盒 (sandbox)，它只是一种减少 Linux 内核暴露的机制，是构建一个安全的沙盒的重要组成部分。</p><h2 id="Docker-Secommp"><a href="#Docker-Secommp" class="headerlink" title="Docker Secommp"></a>Docker Secommp</h2><p>libseccomp 允许您为进程配置允许的系统调用。<br>Docker 为所有容器设置默认的 seccomp 配置文件，以便仅允许某些 syscall，而阻止其他所有内容（因此，libseccomp 或 docker 尚不知道的较新 syscall 将被阻止3）</p><p>docker每个容器默认都设置了一个seccomp profile，屏蔽掉了其中的44个系统调用。<br>docker会将seccomp传递给runc中的sepc.linux.seccomp。<br>可以通过—security-opt seccomp&#x3D;xxx来设置docker的seccomp策略，xxx为json格式的文件，其中定义了seccomp规则。<br>也可以通过–security-opt seccomp&#x3D;unconfined来关闭docker引入默认的seccomp规则的限制。</p><h1 id="Secommp-等导致的-operation-not-permitted-处理办法"><a href="#Secommp-等导致的-operation-not-permitted-处理办法" class="headerlink" title="Secommp 等导致的 operation not permitted 处理办法"></a>Secommp 等导致的 operation not permitted 处理办法</h1><ol><li>–security-opt seccomp&#x3D;unconfined来关闭docker引入默认的seccomp规则的限制</li><li>切换到较旧的映像， 如果 16 在移动到 Debian Bookworm 时开始失败，那么 16-bullseye 是一个有效的解决方法，直到主机可以更新为止。</li><li>更新主机docker版本</li></ol><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>[1] <a href="https://github.com/goharbor/harbor/issues/19141">DB init error: popen failure: Cannot allocate memory</a><br>[2] <a href="https://github.com/timescale/timescaledb-docker-ha/issues/260">Docker image fails during initdb </a><br>[3] <a href="https://github.com/moby/moby/pull/42681">seccomp: add support for “clone3” syscall in default policy</a><br>[4] <a href="https://github.com/moby/moby/issues/42680">seccomp filter breaks latest glibc (in fedora rawhide) by blocking clone3 with EPERM</a><br>[5] <a href="https://docs.docker.com/engine/security/seccomp/">Seccomp security profiles for Docker</a><br>[6] <a href="https://github.com/docker-library/official-images/issues/16829">operation not permitted, a libseccomp story </a><br>[7] <a href="https://github.com/docker-library/golang/issues/467">runtime&#x2F;cgo: pthread_create failed: Operation not permitted</a></p>]]></content>
    
    
    <categories>
      
      <category>docker</category>
      
    </categories>
    
    
    <tags>
      
      <tag>docker</tag>
      
      <tag>secommp</tag>
      
      <tag>harbor</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
